{"ast":null,"code":"var _jsxFileName = \"/Users/skout/Desktop/Auditi/auditi_frontend/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'; // import 'semantic-ui-css/semantic.min.css'\n\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux'; // import logger from 'redux-logger'\n\nimport thunk from 'redux-thunk'; // import rootReducer from './rootReducer'\n\nconst users = () => [];\n\nconst reducer = combineReducers({\n  users\n});\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, composeEnhancer(applyMiddleware(thunk)));\nconst middleware = [thunk]; // let store = createStore(composeEnhancers(applyMiddleware(...middleware)))\n\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }\n})), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/skout/Desktop/Auditi/auditi_frontend/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","Provider","createStore","applyMiddleware","compose","combineReducers","thunk","users","reducer","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","middleware","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB,C,CACA;;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,EAAgDC,eAAhD,QAAuE,OAAvE,C,CACA;;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CACA;;AAEA,MAAMC,KAAK,GAAG,MAAM,EAApB;;AACA,MAAMC,OAAO,GAAGH,eAAe,CAAC;AAC9BE,EAAAA;AAD8B,CAAD,CAA/B;AAIA,MAAME,eAAe,GAAGC,MAAM,CAACC,oCAAP,IAA+CP,OAAvE;AACA,MAAMQ,KAAK,GAAGV,WAAW,CAACM,OAAD,EAAUC,eAAe,CAACN,eAAe,CAACG,KAAD,CAAhB,CAAzB,CAAzB;AAEA,MAAMO,UAAU,GAAG,CAACP,KAAD,CAAnB,C,CACA;;AAEAR,QAAQ,CAACgB,MAAT,eACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEF,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIEG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,E,CAOA;AACA;AACA;;AACAhB,aAAa,CAACiB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import 'semantic-ui-css/semantic.min.css'\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux'\n// import logger from 'redux-logger'\nimport thunk from 'redux-thunk'\n// import rootReducer from './rootReducer'\n\nconst users = () => []\nconst reducer = combineReducers({\n  users\n})\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(reducer, composeEnhancer(applyMiddleware(thunk)))\n\nconst middleware = [thunk]\n// let store = createStore(composeEnhancers(applyMiddleware(...middleware)))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}