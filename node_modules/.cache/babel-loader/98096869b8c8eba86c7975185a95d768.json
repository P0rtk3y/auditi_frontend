{"ast":null,"code":"var _jsxFileName = \"/Users/skout/Desktop/Auditi/auditi_frontend/src/components/Recorder.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Icon, Form, Button, Grid } from 'semantic-ui-react'; // import { Link } from 'react-router-dom'\n\nimport { ReactMic } from 'react-mic';\nimport Pizzicato from 'pizzicato';\nimport OnEvent from 'react-onevent';\nimport { updateAudioForm, createRecording } from '../actions/audioForm.js';\nimport { addAudiocard } from '../actions/myAudioCards.js';\n\nclass Recorder extends React.Component {\n  constructor(props) {\n    super();\n\n    this.startRecording = () => {\n      this.setState({\n        record: true\n      });\n    };\n\n    this.playRecording = () => {\n      if (this.state.soundfile) {\n        this.state.soundfile.play(); // let newAudio = new Audio(this.state.soundfile)\n        // let newAudio = new Audio(this.state.blob)\n        // newAudio.play()\n      } else {\n        console.log(\"no sound\");\n      }\n    };\n\n    this.onStop = micFeedback => {\n      const getSound = new Pizzicato.Sound({\n        source: 'file',\n        options: {\n          path: micFeedback.blobURL\n        }\n      }, () => {\n        this.setState({\n          soundfile: getSound\n        });\n        this.setState({\n          blob: micFeedback.blobURL\n        }); // this.props.addRecording({soundfile: getSound, blob: micFeedback.blobURL}\n      });\n    };\n\n    this.addTag = e => {\n      let newNoSpaceTag = `${e.target.value.trim()}`;\n\n      if (!this.state.tags.includes(newNoSpaceTag)) {\n        this.setState({\n          tags: [...this.state.tags, newNoSpaceTag]\n        });\n        e.target.value = '';\n      }\n    };\n\n    this.deleteTag = removeTag => {\n      const filteredTags = this.state.tags.filter(tag => {\n        return tag !== removeTag;\n      });\n      this.setState({\n        tags: filteredTags\n      });\n    };\n\n    this.handleChange = (e, {\n      name,\n      value\n    }) => {\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const recorderFormData = {\n        category: this.state.category,\n        tags: this.state.tags,\n        soundfile: this.state.blob,\n        soundster: this.state.soundster,\n        image: `https://loremflickr.com/g/200/200/${this.state.tags[0]}`,\n        user_id: this.props.userId // storedBlob: this.state.blob\n\n      }; // this.props.updateAudioForm(recorderFormData)\n      // blob conversion\n      // let newAudio = new Audio(this.state.blob)\n      // for backend\n      // let backendFormData = new FormData()\n      //     backendFormData.append('category', this.state.category)\n      //     backendFormData.append('tags', this.state.tags)\n      //     backendFormData.append('soundfile', this.state.blob)\n      //     backendFormData.append('soundster', this.state.soundster)\n      //     backendFormData.append('image', `https://loremflickr.com/g/200/200/${this.state.tags[0]}`)\n      //     backendFormData.append('user_id', this.props.userId)\n\n      if (recorderFormData.every(k => k.value !== '')) {\n        return this.props.createRecord(recorderFormData);\n      } else {\n        this.setState({\n          displayErrors: true\n        });\n      }\n    };\n\n    this.state = {\n      record: false,\n      soundfile: '',\n      tags: [],\n      category: '',\n      soundster: '',\n      blob: '',\n      displayErrors: false\n    };\n  } //Recording Methods\n\n\n  render() {\n    //animate gears \n    const rotateGears = e => {\n      document.querySelector('.gear1').style.animation = \"rotation 8s infinite linear\";\n      document.querySelector('.gear2').style.animation = \"rotation 8s infinite linear\";\n      this.startRecording();\n      console.log(\"RECORDING\");\n    };\n\n    const stopGears = e => {\n      document.querySelector('.gear1').style.animation = \"\";\n      document.querySelector('.gear2').style.animation = \"\";\n      this.setState({\n        record: false\n      });\n      console.log(\"STOPPING\");\n    };\n\n    const playGears = e => {\n      document.querySelector('.gear1').style.animation = \"rotation 8s infinite linear\";\n      document.querySelector('.gear2').style.animation = \"rotation 8s infinite linear\";\n      this.playRecording();\n      console.log(\"PLAYING\");\n    }; //options for category input\n\n\n    const categoryOptions = [{\n      key: 1,\n      value: 'quotes',\n      text: 'Quotes',\n      icon: 'book'\n    }, {\n      key: 2,\n      text: 'Music',\n      value: 'music',\n      icon: 'music'\n    }, {\n      key: 3,\n      text: 'Nature',\n      value: 'nature',\n      icon: 'leaf'\n    }, {\n      key: 4,\n      text: 'Joke',\n      value: 'joke',\n      icon: 'smile'\n    }, {\n      key: 5,\n      text: 'Health',\n      value: 'health',\n      icon: 'hand spock'\n    }, {\n      key: 6,\n      text: 'Personal',\n      value: 'personal',\n      icon: 'user secret'\n    }, {\n      key: 7,\n      text: 'Mechanical',\n      value: 'mechanical',\n      icon: 'wrench'\n    }, {\n      key: 8,\n      text: 'Other',\n      value: 'other',\n      icon: 'find'\n    }];\n    const getclassName = this.state.displayErrors ? 'displayErrors' : '';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mainRecContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      className: getclassName,\n      onSubmit: this.handleSubmit,\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cassette\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gear1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"helper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gear2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"helper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"soundsterContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"soundster-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Input, {\n      onChange: this.handleChange,\n      className: \"soundster-input-box\",\n      placeholder: \"Sound source\",\n      name: \"soundster\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"category-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Select, {\n      onChange: this.handleChange,\n      placeholder: \"Category\",\n      options: categoryOptions,\n      name: \"category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tag-input\",\n      style: {\n        width: \"550px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      columns: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(OnEvent, {\n      space: this.addTag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Form.Input, {\n      style: {\n        width: \"200px\"\n      },\n      placeholder: \"Add tags\",\n      name: \"addTags\",\n      icon: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(Icon, {\n      name: \"tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 57\n      }\n    })))), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      columns: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 53\n      }\n    }, this.state.tags.map((tag, index) => {\n      return /*#__PURE__*/React.createElement(Button, {\n        onClick: e => this.deleteTag(tag),\n        color: \"teal\",\n        icon: true,\n        name: \"delete\",\n        key: index,\n        labelPosition: \"right\",\n        style: {\n          margin: \"10px 5px 0px 10x\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 73\n        }\n      }, tag, /*#__PURE__*/React.createElement(Icon, {\n        name: \"delete\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 81\n        }\n      }));\n    }))))))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"recordingContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ReactMic, {\n      record: this.state.record,\n      className: \"sound-wave\",\n      onStop: this.onStop,\n      strokeColor: \"#D4E6D7\",\n      backgroundColor: \"#8FC6B4\",\n      mimeType: \"audio/mp3\",\n      duration: 30,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      className: \"recorderButtons\",\n      style: {\n        margin: \"10px 0px 10px 420px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Button, {\n      type: \"button\",\n      attached: \"bottom\",\n      className: \"recordButton\",\n      color: \"olive\",\n      onClick: rotateGears,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"microphone\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 29\n      }\n    }), \"Record\"), /*#__PURE__*/React.createElement(Form.Button, {\n      type: \"onStop\",\n      attached: \"bottom\",\n      className: \"stopButton\",\n      onClick: stopGears,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"stop\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 29\n      }\n    }), \"Stop\"), /*#__PURE__*/React.createElement(Form.Button, {\n      type: \"button\",\n      attached: \"bottom\",\n      className: \"playButton\",\n      onClick: playGears,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"play\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 29\n      }\n    }), \"Play\"), /*#__PURE__*/React.createElement(Form.Button, {\n      type: \"Submit\",\n      className: \"saveButton\",\n      color: \"orange\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"paper plane outline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 29\n      }\n    }), \"Save\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const userId = state.currentUser ? state.currentUser.id : \"\";\n  return {\n    audioForm: state.audioForm,\n    userId\n  };\n}; // const mapStateToProps = state => {\n//     return {\n//         storedRecording: state.storedRecording,\n//         blob: state.storedBlob\n//     }\n// }\n\n\nexport default connect(mapStateToProps, {\n  updateAudioForm,\n  createRecording,\n  addAudiocard\n})(Recorder);","map":{"version":3,"sources":["/Users/skout/Desktop/Auditi/auditi_frontend/src/components/Recorder.js"],"names":["React","connect","Icon","Form","Button","Grid","ReactMic","Pizzicato","OnEvent","updateAudioForm","createRecording","addAudiocard","Recorder","Component","constructor","props","startRecording","setState","record","playRecording","state","soundfile","play","console","log","onStop","micFeedback","getSound","Sound","source","options","path","blobURL","blob","addTag","e","newNoSpaceTag","target","value","trim","tags","includes","deleteTag","removeTag","filteredTags","filter","tag","handleChange","name","handleSubmit","preventDefault","recorderFormData","category","soundster","image","user_id","userId","every","k","createRecord","displayErrors","render","rotateGears","document","querySelector","style","animation","stopGears","playGears","categoryOptions","key","text","icon","getclassName","width","map","index","margin","mapStateToProps","currentUser","id","audioForm"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { Icon, Form, Button, Grid } from 'semantic-ui-react'\n// import { Link } from 'react-router-dom'\nimport { ReactMic } from 'react-mic'\nimport Pizzicato from 'pizzicato'\nimport OnEvent from 'react-onevent'\nimport { updateAudioForm, createRecording} from '../actions/audioForm.js'\nimport { addAudiocard } from '../actions/myAudioCards.js'\n\n\nclass Recorder extends React.Component {\n    constructor(props) {\n      super();\n      this.state = {\n        record: false,\n        soundfile: '',\n        tags: [],\n        category: '',\n        soundster: '',\n        blob: '',\n        displayErrors: false\n        }\n      }\n    \n    //Recording Methods\n    startRecording = () => {\n      this.setState({\n        record: true\n      });\n\n    }\n   \n\n    playRecording = () => {\n        if (this.state.soundfile) {\n            this.state.soundfile.play()\n            // let newAudio = new Audio(this.state.soundfile)\n            // let newAudio = new Audio(this.state.blob)\n            // newAudio.play()\n        } else {\n            console.log(\"no sound\")\n        }\n\n    }\n\n    onStop = (micFeedback) => {\n        const getSound = new Pizzicato.Sound({\n            source: 'file',\n            options: {path: micFeedback.blobURL}\n        }, () => {\n            this.setState({soundfile: getSound})\n            this.setState({blob: micFeedback.blobURL})\n            // this.props.addRecording({soundfile: getSound, blob: micFeedback.blobURL}\n        })\n    }\n\n    // Tag input methods\n\n    addTag = e => {\n        let newNoSpaceTag = `${e.target.value.trim()}`\n        if(!this.state.tags.includes(newNoSpaceTag)){\n            this.setState({\n                tags: [...this.state.tags, newNoSpaceTag]\n            })\n            e.target.value = ''\n        } \n    }\n\n    deleteTag = removeTag => {\n        const filteredTags = this.state.tags.filter(tag => {\n            return tag !== removeTag\n        })        \n        this.setState({\n            tags: filteredTags\n        })  \n    }\n\n    //event handlers\n\n    handleChange = (e, {name,value}) => {\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        const recorderFormData = {\n            category: this.state.category,\n            tags: this.state.tags,\n            soundfile: this.state.blob,\n            soundster: this.state.soundster,\n            image: `https://loremflickr.com/g/200/200/${this.state.tags[0]}`,\n            user_id: this.props.userId\n            // storedBlob: this.state.blob\n        }\n        // this.props.updateAudioForm(recorderFormData)\n\n        // blob conversion\n        // let newAudio = new Audio(this.state.blob)\n\n        // for backend\n        // let backendFormData = new FormData()\n        //     backendFormData.append('category', this.state.category)\n        //     backendFormData.append('tags', this.state.tags)\n        //     backendFormData.append('soundfile', this.state.blob)\n        //     backendFormData.append('soundster', this.state.soundster)\n        //     backendFormData.append('image', `https://loremflickr.com/g/200/200/${this.state.tags[0]}`)\n        //     backendFormData.append('user_id', this.props.userId)\n        \n\n        if(recorderFormData.every(k => k.value !== '')){\n            return this.props.createRecord(recorderFormData)\n        } else {\n            this.setState({displayErrors: true})\n        }\n\n\n    }\n\n\n    \n    render(){\n        //animate gears \n\n        const rotateGears = e => {\n            document.querySelector('.gear1').style.animation = \"rotation 8s infinite linear\"\n            document.querySelector('.gear2').style.animation = \"rotation 8s infinite linear\"\n            this.startRecording()\n            console.log(\"RECORDING\")\n        }\n\n        const stopGears = e => {\n            document.querySelector('.gear1').style.animation = \"\"\n            document.querySelector('.gear2').style.animation = \"\"\n            this.setState({record: false})\n            console.log(\"STOPPING\")\n        }\n\n        const playGears = e => {\n            document.querySelector('.gear1').style.animation = \"rotation 8s infinite linear\"\n            document.querySelector('.gear2').style.animation = \"rotation 8s infinite linear\"\n            this.playRecording()\n            console.log(\"PLAYING\")\n        }\n\n\n        //options for category input\n        const categoryOptions = [\n            { key:1, value: 'quotes', text: 'Quotes', icon: 'book'},\n            { key:2, text: 'Music', value: 'music', icon: 'music'},\n            { key:3, text: 'Nature', value: 'nature', icon: 'leaf'},\n            { key:4, text: 'Joke', value: 'joke', icon: 'smile'},\n            { key:5, text: 'Health', value: 'health', icon: 'hand spock'},\n            { key:6, text: 'Personal', value: 'personal', icon: 'user secret'},\n            { key:7, text: 'Mechanical', value: 'mechanical', icon: 'wrench'},\n            { key:8, text: 'Other', value: 'other', icon: 'find'},\n        ]\n\n        const getclassName = this.state.displayErrors ? 'displayErrors' : ''\n\n        return (\n            <div className='mainRecContainer'>\n                <Form className={getclassName} onSubmit={this.handleSubmit} noValidate> \n                    <div className='cassette'>\n                        <div className='gear1'>\n                            <span className='helper'></span>\n                        </div>\n                        <div className='gear2'>\n                            <span className='helper'></span>\n                        </div>\n                        <div className='soundsterContainer'>\n                            <div className='soundster-input'>\n                                <Form.Input onChange={this.handleChange}\n                                    className=\"soundster-input-box\"\n                                    placeholder=\"Sound source\"\n                                    name='soundster'\n                                />\n                            </div>\n                            <div className='category-input'>\n                                <Form.Select onChange={this.handleChange} \n                                    placeholder=\"Category\"\n                                    options={categoryOptions}\n                                    name='category' \n                                />\n                            </div>\n                            <div className='tag-input' style={{width: \"550px\"}}>\n                                    <Grid>\n                                        <Grid.Row columns={2}>\n                                            <Grid.Column>\n                                                <OnEvent space={this.addTag}>\n                                                    <Form.Input\n                                                        style={{width: \"200px\"}}\n                                                        placeholder=\"Add tags\"\n                                                        name='addTags'\n                                                        icon\n                                                    >\n                                                        <input />\n                                                        <Icon name='tag' />\n                                                    </Form.Input>\n                                                </OnEvent>\n                                            </Grid.Column>\n                                            <Grid.Column>\n                                                <Grid>\n                                                    <Grid.Row columns={2}>\n                                                            {this.state.tags.map((tag, index) => {\n                                                                return  <Button onClick={e => this.deleteTag(tag)}\n                                                                            color='teal'\n                                                                            icon name='delete'\n                                                                            key={index}\n                                                                            labelPosition='right'\n                                                                            style={{margin:\"10px 5px 0px 10x\"}}\n                                                                            >{tag}\n                                                                                <Icon name='delete' />\n                                                                        </Button>\n                                                            })}\n                                                    </Grid.Row>\n                                                </Grid>\n                                            </Grid.Column>\n                                        </Grid.Row>\n                                    </Grid>\n                            </div>\n                        </div>\n                        \n                    </div>\n                    <div className='recordingContainer'>\n                        <ReactMic\n                            record={this.state.record}\n                            className=\"sound-wave\"\n                            onStop={this.onStop}\n                            strokeColor=\"#D4E6D7\"\n                            backgroundColor=\"#8FC6B4\"\n                            mimeType=\"audio/mp3\" \n                            duration={30}\n                            />\n                    </div>\n                    <Form.Group className=\"recorderButtons\" style={{margin: \"10px 0px 10px 420px\"}}>\n                        <Form.Button type=\"button\" attached='bottom' className='recordButton' color=\"olive\" onClick={rotateGears}>\n                            <Icon name='microphone' />\n                            Record \n                        </Form.Button>\n                        <Form.Button type=\"onStop\" attached='bottom' className='stopButton' onClick={stopGears}>\n                            <Icon name='stop' />\n                            Stop   \n                        </Form.Button>\n                        <Form.Button type=\"button\" attached='bottom'className='playButton' onClick={playGears}>\n                            <Icon name='play' />\n                            Play\n                        </Form.Button>\n                        <Form.Button type='Submit' className= 'saveButton' color=\"orange\">\n                            <Icon name='paper plane outline' />\n                            <br></br>\n                            Save\n                        </Form.Button>\n                    </Form.Group>\n                </Form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    const userId = state.currentUser ? state.currentUser.id : \"\"\n    return {\n        audioForm: state.audioForm,\n        userId\n    }\n}\n\n// const mapStateToProps = state => {\n//     return {\n//         storedRecording: state.storedRecording,\n//         blob: state.storedBlob\n//     }\n// }\n\nexport default connect(mapStateToProps, {updateAudioForm, createRecording, addAudiocard})(Recorder)"]},"metadata":{},"sourceType":"module"}