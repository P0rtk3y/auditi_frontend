{"ast":null,"code":"var _jsxFileName = \"/Users/skout/Desktop/Auditi/auditi_frontend/src/components/Count.js\";\nimport React from 'react';\nimport { Button } from 'semantic-ui-react';\n\nclass Count extends React.Component {\n  constructor(props) {\n    super();\n\n    this.playSound = () => {\n      console.log(\"PLAYING RECORDING\");\n\n      if (audiocard.attributes.soundfile) {\n        const getSound = new Pizzicato.Sound({\n          source: 'file',\n          options: {\n            path: audiocard.attributes.soundfile\n          }\n        }, () => {\n          getSound.play();\n        });\n      }\n    };\n\n    this.incrementAndPlay = () => (this.props.playSound, this.setState({\n      count: this.state.count + 1\n    }));\n\n    this.state = {\n      count: 0\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.incrementAndPlay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, \"Play (Count: \", this.state.count, \")\"));\n  }\n\n}\n\nexport default Count;","map":{"version":3,"sources":["/Users/skout/Desktop/Auditi/auditi_frontend/src/components/Count.js"],"names":["React","Button","Count","Component","constructor","props","playSound","console","log","audiocard","attributes","soundfile","getSound","Pizzicato","Sound","source","options","path","play","incrementAndPlay","setState","count","state","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,mBAAvB;;AAEA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd;;AADc,SAOnBC,SAPmB,GAOP,MAAM;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;;AACA,UAAGC,SAAS,CAACC,UAAV,CAAqBC,SAAxB,EAAkC;AAC9B,cAAMC,QAAQ,GAAG,IAAIC,SAAS,CAACC,KAAd,CAAoB;AACjCC,UAAAA,MAAM,EAAE,MADyB;AAEjCC,UAAAA,OAAO,EAAE;AAACC,YAAAA,IAAI,EAAER,SAAS,CAACC,UAAV,CAAqBC;AAA5B;AAFwB,SAApB,EAGd,MAAM;AACLC,UAAAA,QAAQ,CAACM,IAAT;AACH,SALgB,CAAjB;AAMH;AACJ,KAjBiB;;AAAA,SAmBlBC,gBAnBkB,GAmBC,OACf,KAAKd,KAAL,CAAWC,SAAX,EACA,KAAKc,QAAL,CAAc;AAACC,MAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KAAX,GAAmB;AAA3B,KAAd,CAFe,CAnBD;;AAEd,SAAKC,KAAL,GAAa;AACTD,MAAAA,KAAK,EAAE;AADE,KAAb;AAGH;;AAmBDE,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKJ,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAsD,KAAKG,KAAL,CAAWD,KAAjE,MADJ,CADJ;AAKH;;AA/B+B;;AAkCpC,eAAenB,KAAf","sourcesContent":["import React from 'react'\nimport { Button } from 'semantic-ui-react'\n\nclass Count extends React.Component {\n    constructor(props){\n        super()\n        this.state = {\n            count: 0\n        }\n    }\n\n   playSound = () => {\n        console.log(\"PLAYING RECORDING\")\n        if(audiocard.attributes.soundfile){\n            const getSound = new Pizzicato.Sound({\n                source: 'file',\n                options: {path: audiocard.attributes.soundfile}\n            }, () => {\n                getSound.play()\n            })\n        }\n    }\n\n    incrementAndPlay = () => (\n        this.props.playSound,\n        this.setState({count: this.state.count + 1})\n    )\n\n    render(){\n        return (\n            <div>\n                <Button onClick={this.incrementAndPlay}>Play (Count: {this.state.count})</Button>\n            </div>\n        )\n    }\n}\n\nexport default Count; "]},"metadata":{},"sourceType":"module"}