{"ast":null,"code":"var _jsxFileName = \"/Users/skout/Desktop/Auditi/auditi_frontend/src/components/Count.js\";\nimport React from 'react';\nimport { Button } from 'semantic-ui-react';\n\nclass Count extends React.Component {\n  constructor(props) {\n    super();\n\n    this.incrementAndPlay = () => (this.props.playSound, this.setState({\n      count: this.state.count + 1\n    }));\n\n    this.state = {\n      count: 0\n    };\n  }\n\n  render() {\n    console.log(this);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.props.playSound,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    }, \"Play (Count: \", this.state.count, \")\"));\n  }\n\n}\n\nexport default Count;","map":{"version":3,"sources":["/Users/skout/Desktop/Auditi/auditi_frontend/src/components/Count.js"],"names":["React","Button","Count","Component","constructor","props","incrementAndPlay","playSound","setState","count","state","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,mBAAvB;;AAEA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd;;AADc,SAQlBC,gBARkB,GAQC,OACf,KAAKD,KAAL,CAAWE,SAAX,EACA,KAAKC,QAAL,CAAc;AAACC,MAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KAAX,GAAmB;AAA3B,KAAd,CAFe,CARD;;AAEd,SAAKC,KAAL,GAAa;AACTD,MAAAA,KAAK,EAAE;AADE,KAAb;AAGH;;AAQDE,EAAAA,MAAM,GAAE;AACJC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKR,KAAL,CAAWE,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAqD,KAAKG,KAAL,CAAWD,KAAhE,MADJ,CADJ;AAKH;;AArB+B;;AAwBpC,eAAeP,KAAf","sourcesContent":["import React from 'react'\nimport { Button } from 'semantic-ui-react'\n\nclass Count extends React.Component {\n    constructor(props){\n        super()\n        this.state = {\n            count: 0\n        }\n    }\n\n\n    incrementAndPlay = () => (\n        this.props.playSound,\n        this.setState({count: this.state.count + 1})\n    )\n\n    render(){\n        console.log(this)\n        return (\n            <div>\n                <Button onClick={this.props.playSound}>Play (Count: {this.state.count})</Button>\n            </div>\n        )\n    }\n}\n\nexport default Count; "]},"metadata":{},"sourceType":"module"}