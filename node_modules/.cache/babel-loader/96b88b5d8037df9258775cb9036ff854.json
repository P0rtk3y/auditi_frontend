{"ast":null,"code":"//synchronous action creators\nexport const setCurrentUser = user => {\n  return {\n    type: \"SET_CURRENT_USER\",\n    user\n  };\n};\nexport const clearCurrentUser = () => {\n  return {\n    type: \"CLEAR_CURRENT_USER\"\n  };\n}; //asynchronous action creators\n\nexport const login = credentials => {\n  return dispatch => {\n    return fetch(\"http://localhost:3000/api/v1/login\", {\n      credentials: \"include\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(credentials)\n    }).then(resp => resp.json()).then(user => {\n      if (user.error) {\n        alert(user.error);\n      } else {\n        dispatch(setCurrentUser(user));\n      }\n    }).catch(console.log);\n  };\n};\nexport const signup = credentials => {\n  return dispatch => {\n    const userInfo = {\n      user: credentials\n    };\n    return fetch(\"http://localhost:3000/api/v1/signup\", {\n      credentials: \"include\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(userInfo)\n    }).then(resp => resp.json()).then(user => {\n      if (user.error) {\n        alert(user.error);\n      } else {\n        dispatch(setCurrentUser(user.data));\n        dispatch(resetSignupForm());\n      }\n    }).catch(console.log);\n  };\n};\nexport const getCurrentUser = () => {\n  return dispatch => {\n    return fetch(\"http://localhost:3000/api/v1/get_current_user\", {\n      credentials: \"include\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(resp => resp.json()).then(user => {\n      if (user.error) {\n        alert(user.error);\n      } else {\n        dispatch(setCurrentUser(user));\n      }\n    }).catch(console.log);\n  };\n};\nexport const logout = e => {\n  return dispatch => {\n    dispatch(clearCurrentUser());\n    return fetch('http://localhost:3000/api/v1/logout', {\n      credentials: \"include\",\n      method: \"DELETE\"\n    });\n  };\n};","map":{"version":3,"sources":["/Users/skout/Desktop/Auditi/auditi_frontend/src/actions/currentUser.js"],"names":["setCurrentUser","user","type","clearCurrentUser","login","credentials","dispatch","fetch","method","headers","body","JSON","stringify","then","resp","json","error","alert","catch","console","log","signup","userInfo","data","resetSignupForm","getCurrentUser","logout","e"],"mappings":"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","sourcesContent":["//synchronous action creators\nexport const setCurrentUser = user => {\n    return {\n        type: \"SET_CURRENT_USER\",\n        user\n    }\n}\n\nexport const clearCurrentUser = () => {\n    return {\n        type: \"CLEAR_CURRENT_USER\"\n    }\n}\n\n\n//asynchronous action creators\nexport const login = credentials => {\n    return dispatch => {\n        return fetch(\"http://localhost:3000/api/v1/login\", {\n            credentials: \"include\",\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(credentials)\n        })\n            .then(resp => resp.json())\n            .then(user => {\n                if (user.error){\n                    alert(user.error)\n                } else {\n                    dispatch(setCurrentUser(user))\n                }\n            })\n            .catch(console.log)\n    }\n}\n\nexport const signup = credentials => {\n    return dispatch => {\n        const userInfo = {\n            user: credentials\n        }\n        return fetch(\"http://localhost:3000/api/v1/signup\", {\n            credentials: \"include\",\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(userInfo)\n        })\n        .then(resp => resp.json())\n        .then(user => {\n            if(user.error){\n                alert(user.error)\n            } else {\n                dispatch(setCurrentUser(user.data))\n                dispatch(resetSignupForm())\n            }\n        })\n        .catch(console.log)\n    }\n}\n\nexport const getCurrentUser = () => {\n    return dispatch => {\n        return fetch(\"http://localhost:3000/api/v1/get_current_user\", {\n            credentials: \"include\",\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n        })\n            .then(resp => resp.json())\n            .then(user => {\n                if (user.error){\n                    alert(user.error)\n                } else {\n                    dispatch(setCurrentUser(user))\n                }\n            })\n            .catch(console.log)\n    }\n}\n\nexport const logout = e => {\n    return dispatch => {\n        dispatch(clearCurrentUser())\n        return fetch('http://localhost:3000/api/v1/logout', {\n            credentials: \"include\", \n            method: \"DELETE\"\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}