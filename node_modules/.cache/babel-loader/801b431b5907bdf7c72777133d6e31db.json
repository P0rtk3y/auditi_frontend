{"ast":null,"code":"import _objectSpread from\"/Users/skout/Desktop/Auditi/auditi_frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";var baseURL=\"http://localhost:3000/api/v1\";export var setMyAudiocards=function setMyAudiocards(audiocards){return{type:\"SET_MY_AUDIOCARDS\",audiocards:audiocards};};export var addAudiocard=function addAudiocard(audiocard){return{type:\"ADD_AUDIOCARD\",audiocard:audiocard};};export var clearAudiocards=function clearAudiocards(audiocards){return{type:\"CLEAR_AUDIOCARDS\"};};export var confirmEdit=function confirmEdit(audiocard){return{type:\"EDIT_AUDIOCARD\",audiocard:audiocard};};export var confirmDelete=function confirmDelete(audiocardId){return{type:\"DELETE_AUDIOCARD\",audiocardId:audiocardId};};export var confirmFavorite=function confirmFavorite(audiocard){return{type:\"FAVORITE_AUDIOCARD\",audiocard:audiocard};};export var getMyAudiocards=function getMyAudiocards(){return function(dispatch){return fetch(\"\".concat(baseURL,\"/audiocards\"),{credentials:\"include\",method:\"GET\",headers:{\"Content-Type\":\"application/json\"}}).then(function(resp){return resp.json();}).then(function(response){if(response.error){alert(response.error);}else{return dispatch(setMyAudiocards(response.data));}}).catch(console.log);};};export var editAudiocard=function editAudiocard(audiocard){return function(dispatch){var editedData=_objectSpread({},audiocard,{soundster:audiocard.attributes.soundster});return fetch(\"\".concat(baseURL,\"/audiocards/\").concat(audiocard.id),{credentials:\"include\",method:\"PATCH\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(editedData)}).then(function(resp){return resp.json();}).then(function(response){if(response.error){alert(response.error);}else{return dispatch(getMyAudiocards());}}).catch(console.log);};};export var favoriteAudiocard=function favoriteAudiocard(audiocard){return function(dispatch){var addFavorite=_objectSpread({},audiocard,{favorite:audiocard.attributes.favorite});return fetch(\"\".concat(baseURL,\"/audiocards/\").concat(audiocard.id),{credentials:\"include\",method:\"PATCH\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(addFavorite)}).then(function(resp){return resp.json();}).then(function(response){if(response.error){alert(response.error);}else{return dispatch(getMyAudiocards());}}).catch(console.log);};};export var deleteAudiocard=function deleteAudiocard(audiocardId){return function(dispatch){return fetch(\"\".concat(baseURL,\"/audiocards/\").concat(audiocardId),{credentials:\"include\",method:\"DELETE\",headers:{\"Content-Type\":\"application/json\"}}).then(function(resp){return resp.json();}).then(function(response){if(response.error){alert(response.error);}else{return dispatch(getMyAudiocards());}}).catch(console.log);};};","map":{"version":3,"sources":["/Users/skout/Desktop/Auditi/auditi_frontend/src/actions/myAudioCards.js"],"names":["baseURL","setMyAudiocards","audiocards","type","addAudiocard","audiocard","clearAudiocards","confirmEdit","confirmDelete","audiocardId","confirmFavorite","getMyAudiocards","dispatch","fetch","credentials","method","headers","then","resp","json","response","error","alert","data","catch","console","log","editAudiocard","editedData","soundster","attributes","id","body","JSON","stringify","favoriteAudiocard","addFavorite","favorite","deleteAudiocard"],"mappings":"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","sourcesContent":["\nconst baseURL = \"http://localhost:3000/api/v1\"\n\n\n\nexport const setMyAudiocards = audiocards => {\n    return {\n        type: \"SET_MY_AUDIOCARDS\",\n        audiocards\n    }\n}\n\nexport const addAudiocard = audiocard => {\n    return {\n        type: \"ADD_AUDIOCARD\",\n        audiocard\n    }\n}\n\n\nexport const clearAudiocards = audiocards => {\n    return {\n        type: \"CLEAR_AUDIOCARDS\"\n    }\n}\n\nexport const confirmEdit = audiocard => {\n    return {\n        type: \"EDIT_AUDIOCARD\",\n        audiocard\n    }\n}\n\n\nexport const confirmDelete = audiocardId => {\n    return {\n        type: \"DELETE_AUDIOCARD\",\n        audiocardId\n    }\n}\n\nexport const confirmFavorite = audiocard => {\n    return {\n        type: \"FAVORITE_AUDIOCARD\",\n        audiocard\n    }\n}\n\n\n\nexport const getMyAudiocards = () => {\n    return dispatch => {\n        return fetch(`${baseURL}/audiocards`, {\n            credentials: \"include\",\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n        })\n            .then(resp => resp.json())\n            .then(response => {\n                if (response.error){\n                    alert(response.error)\n                } else {\n                    return dispatch(setMyAudiocards(response.data))\n                }\n            })\n            .catch(console.log)\n    }\n}\n\nexport const editAudiocard = audiocard => {\n    return dispatch => {\n        const editedData = {\n            ...audiocard,\n            soundster: audiocard.attributes.soundster\n        }\n        return fetch(`${baseURL}/audiocards/${audiocard.id}`, {\n            credentials: \"include\",\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(editedData)\n        })\n        .then(resp => resp.json())\n        .then(response => {\n            if (response.error){\n                alert(response.error)\n            }else {\n                return dispatch(getMyAudiocards())\n            }\n        })\n        .catch(console.log)\n    }\n}\n\nexport const favoriteAudiocard = audiocard => {\n    return dispatch => {\n        const addFavorite = {\n            ...audiocard,\n            favorite: audiocard.attributes.favorite\n        }\n        return fetch(`${baseURL}/audiocards/${audiocard.id}`, {\n            credentials: \"include\",\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(addFavorite)\n        })\n        .then(resp => resp.json())\n        .then(response => {\n            if (response.error){\n                alert(response.error)\n            }else {\n                return dispatch(getMyAudiocards())\n            }\n        })\n        .catch(console.log)\n    }\n}\n\nexport const deleteAudiocard = (audiocardId) => {\n    return dispatch => {\n        return fetch(`${baseURL}/audiocards/${audiocardId}`, {\n            credentials: \"include\",\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n    })\n        .then(resp => resp.json())\n        .then(response => {\n            if (response.error){\n                alert(response.error)\n            } else {\n                return dispatch(getMyAudiocards())\n            }\n        })\n        .catch(console.log)\n    }\n}"]},"metadata":{},"sourceType":"module"}