{"ast":null,"code":"var _jsxFileName = \"/Users/skout/Desktop/Auditi/auditi_frontend/src/components/Audiocard.js\";\nimport React from 'react';\nimport { Image, Card, Grid } from 'semantic-ui-react';\nimport myAudioCards from '../reducers/myAudioCards';\nimport Tags from './Tags';\nimport Pizzicato from 'pizzicato';\n\nconst Audiocard = ({\n  audiocard\n}) => {\n  let newDate = '';\n\n  if (audiocard.attributes.created_at) {\n    let convertDate = audiocard.attributes.created_at.split('T')[0].split('-');\n    newDate = new Date(convertDate).toDateString();\n  } //play on hover\n\n\n  const playRecording = () => {\n    console.log(audiocard.attributes.soundfile);\n\n    if (audiocard.attributes.soundfile) {\n      return audiocard.attributes.soundfile.play();\n    }\n  };\n\n  const tags = JSON.parse(audiocard.attributes.tags);\n  const getTags = tags.map((tag, index) => /*#__PURE__*/React.createElement(Tags, {\n    tag: tag,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }));\n  return /*#__PURE__*/React.createElement(Card, {\n    color: \"olive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: audiocard.attributes.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Card.Content, {\n    onMouseOver: playRecording,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }, audiocard.attributes.soundster), /*#__PURE__*/React.createElement(Card.Meta, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 29\n    }\n  }, \"Created on \", newDate)), /*#__PURE__*/React.createElement(Card.Description, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, \"(\", audiocard.attributes.category, \")\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card.Content, {\n    extra: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Row, {\n    column: 2,\n    className: \"tag-button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 29\n    }\n  }, getTags)))));\n};\n\nexport default Audiocard;","map":{"version":3,"sources":["/Users/skout/Desktop/Auditi/auditi_frontend/src/components/Audiocard.js"],"names":["React","Image","Card","Grid","myAudioCards","Tags","Pizzicato","Audiocard","audiocard","newDate","attributes","created_at","convertDate","split","Date","toDateString","playRecording","console","log","soundfile","play","tags","JSON","parse","getTags","map","tag","index","image","soundster","category"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,IAAtB,QAAiC,mBAAjC;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,WAAtB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAiB;AAG/B,MAAIC,OAAO,GAAG,EAAd;;AACA,MAAID,SAAS,CAACE,UAAV,CAAqBC,UAAzB,EAAoC;AAChC,QAAIC,WAAW,GAAGJ,SAAS,CAACE,UAAV,CAAqBC,UAArB,CAAgCE,KAAhC,CAAsC,GAAtC,EAA2C,CAA3C,EAA8CA,KAA9C,CAAoD,GAApD,CAAlB;AACAJ,IAAAA,OAAO,GAAG,IAAIK,IAAJ,CAASF,WAAT,EAAsBG,YAAtB,EAAV;AACH,GAP8B,CAS/B;;;AACA,QAAMC,aAAa,GAAG,MAAM;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAYV,SAAS,CAACE,UAAV,CAAqBS,SAAjC;;AACA,QAAGX,SAAS,CAACE,UAAV,CAAqBS,SAAxB,EAAkC;AAClC,aAAOX,SAAS,CAACE,UAAV,CAAqBS,SAArB,CAA+BC,IAA/B,EAAP;AACC;AACJ,GALD;;AAOA,QAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWf,SAAS,CAACE,UAAV,CAAqBW,IAAhC,CAAb;AAEA,QAAMG,OAAO,GAAGH,IAAI,CAACI,GAAL,CAAS,CAACC,GAAD,EAAMC,KAAN,kBACrB,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAED,GAAX;AAAgB,IAAA,GAAG,EAAEC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADY,CAAhB;AAMI,sBACQ,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAEnB,SAAS,CAACE,UAAV,CAAqBkB,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,IAAD,CAAM,OAAN;AACI,IAAA,WAAW,EAAEZ,aADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcR,SAAS,CAACE,UAAV,CAAqBmB,SAAnC,CAHJ,eAII,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAmCpB,OAAnC,CADJ,CAJJ,eAOI,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACMD,SAAS,CAACE,UAAV,CAAqBoB,QAD3B,MAPJ,CAFJ,eAaA;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,KAAK,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,GAAN;AAAU,IAAA,MAAM,EAAE,CAAlB;AAAqB,IAAA,SAAS,EAAC,sBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,OADL,CADJ,CADJ,CADJ,CAbA,CADR;AAyBP,CAlDD;;AAoDA,eAAejB,SAAf","sourcesContent":["import React from 'react'\nimport { Image, Card, Grid} from 'semantic-ui-react';\nimport myAudioCards from '../reducers/myAudioCards';\nimport Tags from './Tags'\nimport Pizzicato from 'pizzicato'\n\nconst Audiocard = ({audiocard}) => {\n\n\n    let newDate = ''\n    if (audiocard.attributes.created_at){\n        let convertDate = audiocard.attributes.created_at.split('T')[0].split('-')\n        newDate = new Date(convertDate).toDateString()\n    }\n\n    //play on hover\n    const playRecording = () => {\n        console.log(audiocard.attributes.soundfile)\n        if(audiocard.attributes.soundfile){\n        return audiocard.attributes.soundfile.play()\n        }\n    }\n\n    const tags = JSON.parse(audiocard.attributes.tags)\n\n    const getTags = tags.map((tag, index) => \n        <Tags tag={tag} key={index} />\n    )\n\n    \n\n        return (\n                <Card color=\"olive\">\n                    <Image src={audiocard.attributes.image} /> \n                    <Card.Content\n                        onMouseOver={playRecording}\n                    >\n                        <Card.Header>{audiocard.attributes.soundster}</Card.Header>\n                        <Card.Meta>\n                            <span className='date'>Created on {newDate}</span>\n                        </Card.Meta>\n                        <Card.Description>\n                            ({audiocard.attributes.category})\n                        </Card.Description>\n                    </Card.Content>\n                <div className='icon-container'>\n                    <Card.Content extra>\n                        <Grid>\n                            <Grid.Row column={2} className='tag-button-container'>\n                                {getTags}\n                            </Grid.Row>\n                        </Grid>\n                    </Card.Content>\n                </div>\n                </Card>\n        )\n}\n\nexport default Audiocard;"]},"metadata":{},"sourceType":"module"}