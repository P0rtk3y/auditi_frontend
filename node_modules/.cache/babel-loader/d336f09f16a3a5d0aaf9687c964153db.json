{"ast":null,"code":"var _jsxFileName = \"/Users/skout/Desktop/Auditi/auditi_frontend/src/components/Audiocard.js\";\nimport { Image, Card, Grid, Icon, Label, Button, Modal, Header } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport React, { useState } from 'react';\nimport Tags from './Tags'; // import Pizzicato from 'pizzicato'\n\nimport { confirmDelete, deleteAudiocard, editAudiocard, confirmEdit, favoriteAudiocard, confirmFavorite } from '../actions/myAudioCards';\n\nconst Audiocard = ({\n  audiocard,\n  confirmDelete,\n  deleteAudiocard,\n  editAudiocard,\n  confirmEdit,\n  favoriteAudiocard,\n  confirmFavorite\n}) => {\n  const [modalState, setModal] = useState(false);\n  let newDate = '';\n\n  if (audiocard.attributes.created_at) {\n    let convertDate = audiocard.attributes.created_at.split('T')[0].split('-');\n    newDate = new Date(convertDate).toDateString();\n  } //play on hover\n\n\n  const playRecording = () => {\n    console.log(\"PLAYING RECORDING\");\n\n    if (audiocard.attributes.soundfile) {// let blob = new Blob(audiocard.attributes.soundfile)\n      // let url = window.URL.createObjectURL(blob)\n      // console.log(url)\n      // window.audio = new Audio()\n      // window.audio.src = url \n      // window.audio.play()\n      // return audiocard.attributes.soundfile.play()\n    }\n  };\n\n  const tags = JSON.parse(audiocard.attributes.tags);\n  const getTags = tags.map((tag, index) => /*#__PURE__*/React.createElement(Tags, {\n    tag: tag,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }));\n\n  const handleDeleteClick = e => {\n    confirmDelete(audiocard.id);\n    deleteAudiocard(audiocard.id);\n    setModal(false);\n  };\n\n  const addColor = category => {\n    switch (category) {\n      case \"quotes\":\n        return \"#AECBDF\";\n\n      case \"music\":\n        return \"#DFC2AE\";\n\n      case \"nature\":\n        return \"#AEDFC1\";\n\n      case \"Personal\":\n        return \"#DFB3AE\";\n\n      case \"joke\":\n        return \"#C99EDB\";\n\n      case \"health\":\n        return \"#DA9333\";\n\n      default:\n        return \"#AEDFD5\";\n    }\n  };\n\n  const modifyCardContent = id => {\n    let oldHeader = audiocard.attributes.soundster;\n    let modifyCard = document.querySelector(`div.header.header-${id}`);\n    modifyCard.setAttribute('contenteditable', 'true');\n    let newHeader = modifyCard.innerHTML;\n\n    if (oldHeader !== newHeader) {\n      audiocard.attributes.soundster = newHeader;\n      confirmEdit(audiocard);\n      editAudiocard(audiocard);\n    }\n  };\n\n  const addFavorite = audiocard => {\n    console.log(audiocard.attributes.favorite);\n    let getIcon = document.querySelector(`a.ui.left.corner.label.icon-${audiocard.id}`).firstElementChild;\n    !getIcon.className.includes('pink') ? getIcon.className = 'pink bullhorn icon' : getIcon.className = 'bullhorn icon';\n\n    if (getIcon.className.includes('pink')) {\n      audiocard.attributes.favorite = true;\n      favoriteAudiocard(audiocard);\n      confirmFavorite(audiocard);\n    } else {\n      audiocard.attributes.favorite = false;\n      favoriteAudiocard(audiocard);\n      confirmFavorite(audiocard);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    color: \"olive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    fluid: true,\n    src: audiocard.attributes.image,\n    onMouseEnter: () => playRecording(),\n    label: {\n      as: 'a',\n      corner: 'left',\n      className: `icon-${audiocard.id}`,\n      icon: audiocard.attributes.favorite ? \"pink bullhorn\" : \"bullhorn\"\n    },\n    onClick: e => addFavorite(audiocard),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Card.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    className: `header-${audiocard.id}`,\n    onClick: e => modifyCardContent(audiocard.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  }, audiocard.attributes.soundster), /*#__PURE__*/React.createElement(Card.Meta, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 29\n    }\n  }, \"Created on \", newDate)), /*#__PURE__*/React.createElement(Card.Description, {\n    style: {\n      color: addColor(audiocard.attributes.category)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }\n  }, \"(\", audiocard.attributes.category, \")\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card.Content, {\n    extra: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Row, {\n    column: 2,\n    className: \"tag-button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 33\n    }\n  }, getTags)))), /*#__PURE__*/React.createElement(Label, {\n    corner: \"right\",\n    color: \"yellow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    dimmer: true,\n    trigger: /*#__PURE__*/React.createElement(Icon, {\n      name: \"times circle\",\n      className: \"deleteIcon\",\n      onClick: e => setModal(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 38\n      }\n    }),\n    open: {\n      modalState\n    },\n    onClose: setModal(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Modal.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"trash alternate outline\",\n    color: \"olive\",\n    small: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 37\n    }\n  }), \"Are you sure you want to delete?\")), /*#__PURE__*/React.createElement(Modal.Actions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"green\",\n    inverted: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"checkmark\",\n    onClick: handleDeleteClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 37\n    }\n  }), \" Yes\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"red\",\n    inverted: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"checkmark\",\n    onClick: e => setModal(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 37\n    }\n  }), \" No\")))));\n};\n\nexport default connect(null, {\n  confirmDelete,\n  deleteAudiocard,\n  editAudiocard,\n  confirmEdit,\n  favoriteAudiocard,\n  confirmFavorite\n})(Audiocard);","map":{"version":3,"sources":["/Users/skout/Desktop/Auditi/auditi_frontend/src/components/Audiocard.js"],"names":["Image","Card","Grid","Icon","Label","Button","Modal","Header","connect","React","useState","Tags","confirmDelete","deleteAudiocard","editAudiocard","confirmEdit","favoriteAudiocard","confirmFavorite","Audiocard","audiocard","modalState","setModal","newDate","attributes","created_at","convertDate","split","Date","toDateString","playRecording","console","log","soundfile","tags","JSON","parse","getTags","map","tag","index","handleDeleteClick","e","id","addColor","category","modifyCardContent","oldHeader","soundster","modifyCard","document","querySelector","setAttribute","newHeader","innerHTML","addFavorite","favorite","getIcon","firstElementChild","className","includes","image","as","corner","icon","color"],"mappings":"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","sourcesContent":["import { Image, Card, Grid, Icon, Label, Button, Modal, Header } from 'semantic-ui-react';\nimport { connect } from 'react-redux'\nimport React, {useState} from 'react'\nimport Tags from './Tags'\n// import Pizzicato from 'pizzicato'\nimport {confirmDelete, deleteAudiocard, editAudiocard, confirmEdit, favoriteAudiocard, confirmFavorite} from '../actions/myAudioCards'\n\nconst Audiocard = ({audiocard, confirmDelete, deleteAudiocard, editAudiocard, confirmEdit, favoriteAudiocard, confirmFavorite}) => {\n    \n    const [modalState, setModal] = useState(false)\n\n\n    let newDate = ''\n    if (audiocard.attributes.created_at){\n        let convertDate = audiocard.attributes.created_at.split('T')[0].split('-')\n        newDate = new Date(convertDate).toDateString()\n    }\n\n    //play on hover\n    const playRecording = () => {\n        console.log(\"PLAYING RECORDING\")\n        if(audiocard.attributes.soundfile){\n            // let blob = new Blob(audiocard.attributes.soundfile)\n            // let url = window.URL.createObjectURL(blob)\n            // console.log(url)\n            // window.audio = new Audio()\n            // window.audio.src = url \n            // window.audio.play()\n            // return audiocard.attributes.soundfile.play()\n        }\n    }\n\n    const tags = JSON.parse(audiocard.attributes.tags)\n\n    const getTags = tags.map((tag, index) => \n        <Tags tag={tag} key={index} />\n    )\n\n    const handleDeleteClick = e => {\n        confirmDelete(audiocard.id)\n        deleteAudiocard(audiocard.id)\n        setModal(false)\n    }\n\n    const addColor = (category) => {\n        switch(category){\n            case \"quotes\":\n                return \"#AECBDF\"\n            case \"music\":\n                return \"#DFC2AE\"\n            case \"nature\":\n                return \"#AEDFC1\"\n            case \"Personal\":\n                return \"#DFB3AE\"\n            case \"joke\":\n                return \"#C99EDB\"\n            case \"health\":\n                return \"#DA9333\"\n            default:\n                return \"#AEDFD5\"\n        }\n    }\n\n    const modifyCardContent = (id) => {\n        let oldHeader = audiocard.attributes.soundster\n        let modifyCard = document.querySelector(`div.header.header-${id}`)\n            modifyCard.setAttribute('contenteditable', 'true')\n        let newHeader = modifyCard.innerHTML\n\n        if(oldHeader !== newHeader){\n            audiocard.attributes.soundster = newHeader\n            confirmEdit(audiocard)\n            editAudiocard(audiocard)\n        }\n    }\n\n    const addFavorite = (audiocard) => {\n        console.log(audiocard.attributes.favorite)\n        let getIcon = document.querySelector(`a.ui.left.corner.label.icon-${audiocard.id}`).firstElementChild\n        !getIcon.className.includes('pink') ? getIcon.className = 'pink bullhorn icon' : getIcon.className = 'bullhorn icon'\n        if(getIcon.className.includes('pink')){\n            audiocard.attributes.favorite = true\n            favoriteAudiocard(audiocard)\n            confirmFavorite(audiocard)\n        }else{\n            audiocard.attributes.favorite = false\n            favoriteAudiocard(audiocard)\n            confirmFavorite(audiocard)\n        }\n    }\n\n\n        return (\n                <Card color=\"olive\">\n                    <Image \n                        fluid\n                        src={audiocard.attributes.image} \n                        onMouseEnter={() => playRecording()}\n                        label={{ \n                            as: 'a', \n                            corner: 'left', \n                            className: `icon-${audiocard.id}`,\n                            icon: audiocard.attributes.favorite ? \"pink bullhorn\" : \"bullhorn\"\n                        }}\n                        onClick={e => addFavorite(audiocard)}\n                    />\n                    <Card.Content>\n                        <Card.Header \n                            className={`header-${audiocard.id}`} \n                            onClick={e => modifyCardContent(audiocard.id)}>{audiocard.attributes.soundster}\n                        </Card.Header>\n                        <Card.Meta>\n                            <span className='date'>Created on {newDate}</span>\n                        </Card.Meta>\n                        <Card.Description style={{color:addColor(audiocard.attributes.category)}}>\n                            ({audiocard.attributes.category})\n                        </Card.Description>\n                    </Card.Content>\n                    <div className='icon-container'>\n                        <Card.Content extra>\n                            <Grid>\n                                <Grid.Row column={2} className='tag-button-container'>\n                                    {getTags}\n                                </Grid.Row>\n                            </Grid>\n                        </Card.Content>\n                    </div>\n                    <Label corner='right' \n                        color='yellow' \n                    >\n                        <Modal \n                            dimmer\n                            trigger={<Icon name=\"times circle\" className='deleteIcon' onClick={e => setModal(true)}/>} \n                            open={{modalState}}\n                            onClose={setModal(false)}\n                        >\n                            <Header />\n                            <Modal.Content>\n                                <p>\n                                    <Icon name=\"trash alternate outline\" color=\"olive\" small /> \n                                    Are you sure you want to delete?\n                                </p>\n                            </Modal.Content>\n                            <Modal.Actions>\n                                <Button color='green' inverted>\n                                    <Icon name='checkmark' onClick={handleDeleteClick}/> Yes\n                                </Button>\n                                <Button color='red' inverted>\n                                    <Icon name='checkmark' onClick={e => setModal(false)}/> No\n                                </Button>\n                            </Modal.Actions>\n                        </Modal>\n                    </Label>\n                </Card>\n        )\n}\n\n\nexport default connect(null, {confirmDelete, deleteAudiocard, editAudiocard, confirmEdit, favoriteAudiocard, confirmFavorite})(Audiocard)"]},"metadata":{},"sourceType":"module"}