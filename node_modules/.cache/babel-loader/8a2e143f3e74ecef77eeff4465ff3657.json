{"ast":null,"code":"var _jsxFileName = \"/Users/skout/Desktop/Auditi/auditi_frontend/src/NavBar.js\";\nimport React, { PureComponent } from 'react';\nimport { Menu, Icon, Search, Grid } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport './App.css';\n\nclass NavBar extends PureComponent {\n  constructor(props) {\n    super();\n\n    this.handleWindowSizeChange = () => {\n      this.setState({\n        deviceWidth: window.innerWidth\n      });\n    };\n\n    this.state = {\n      deviceWidth: window.innerWidth\n    };\n  } //resizes based on device type\n\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  render() {\n    let isMobile;\n    const setWidth = this.state.deviceWidth;\n    setWidth <= 750 ? isMobile = true : isMobile = false;\n    let resizedIcon;\n    let navType;\n\n    if (isMobile) {\n      resizedIcon = \"small\";\n      navType = \"navMobile\";\n    } else {\n      resizedIcon = \"huge\";\n      navType = \"navDesktop\";\n    }\n\n    return /*#__PURE__*/React.createElement(Menu, {\n      secondary: true,\n      fixed: \"top\",\n      widths: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Menu.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      size: resizedIcon,\n      name: \"home\",\n      color: \"orange\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 24\n      }\n    })), /*#__PURE__*/React.createElement(Menu.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Search, {\n      className: \"searchBar\",\n      input: {\n        fluid: false\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 24\n      }\n    })), /*#__PURE__*/React.createElement(Menu.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      size: resizedIcon,\n      name: \"user\",\n      color: \"purple\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 24\n      }\n    })));\n  }\n\n}\n\nexport default NavBar;","map":{"version":3,"sources":["/Users/skout/Desktop/Auditi/auditi_frontend/src/NavBar.js"],"names":["React","PureComponent","Menu","Icon","Search","Grid","Link","NavBar","constructor","props","handleWindowSizeChange","setState","deviceWidth","window","innerWidth","state","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","isMobile","setWidth","resizedIcon","navType","fluid"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,MAArB,EAA6BC,IAA7B,QAAwC,mBAAxC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,WAAP;;AAGA,MAAMC,MAAN,SAAqBN,aAArB,CAAmC;AACjCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB;;AADiB,SAgBnBC,sBAhBmB,GAgBM,MAAM;AAC7B,WAAKC,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAEC,MAAM,CAACC;AAAtB,OAAd;AACD,KAlBkB;;AAEjB,SAAKC,KAAL,GAAa;AACXH,MAAAA,WAAW,EAAEC,MAAM,CAACC;AADT,KAAb;AAGD,GANgC,CAQjC;;;AACAE,EAAAA,iBAAiB,GAAG;AAClBH,IAAAA,MAAM,CAACI,gBAAP,CAAwB,QAAxB,EAAkC,KAAKP,sBAAvC;AACD;;AAEDQ,EAAAA,oBAAoB,GAAG;AACrBL,IAAAA,MAAM,CAACM,mBAAP,CAA2B,QAA3B,EAAqC,KAAKT,sBAA1C;AACD;;AAMDU,EAAAA,MAAM,GAAE;AACN,QAAIC,QAAJ;AACA,UAAMC,QAAQ,GAAG,KAAKP,KAAL,CAAWH,WAA5B;AACAU,IAAAA,QAAQ,IAAI,GAAZ,GAAmBD,QAAQ,GAAG,IAA9B,GAAqCA,QAAQ,GAAG,KAAhD;AAGA,QAAIE,WAAJ;AACA,QAAIC,OAAJ;;AACA,QAAIH,QAAJ,EAAc;AACZE,MAAAA,WAAW,GAAG,OAAd;AACAC,MAAAA,OAAO,GAAG,WAAV;AACD,KAHD,MAGO;AACLD,MAAAA,WAAW,GAAG,MAAd;AACAC,MAAAA,OAAO,GAAG,YAAV;AACD;;AAGD,wBACI,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,KAAK,EAAC,KAAtB;AAA4B,MAAA,MAAM,EAAE,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAW,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAED,WAAZ;AAAyB,MAAA,IAAI,EAAC,MAA9B;AAAqC,MAAA,KAAK,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAX,CADJ,eAEI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAW,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,WAAlB;AAA8B,MAAA,KAAK,EAAE;AAACE,QAAAA,KAAK,EAAC;AAAP,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAX,CAFJ,eAGI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAW,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEF,WAAZ;AAAyB,MAAA,IAAI,EAAC,MAA9B;AAAqC,MAAA,KAAK,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAX,CAHJ,CADJ;AAQD;;AA9CgC;;AAkDnC,eAAehB,MAAf","sourcesContent":["import React, { PureComponent } from 'react';\nimport { Menu, Icon, Search, Grid} from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport './App.css';\n\n\nclass NavBar extends PureComponent {\n  constructor(props) {\n    super()\n    this.state = {\n      deviceWidth: window.innerWidth\n    }\n  }\n\n  //resizes based on device type\n  componentDidMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  handleWindowSizeChange = () => {\n    this.setState({ deviceWidth: window.innerWidth });\n  }\n\n  render(){\n    let isMobile\n    const setWidth = this.state.deviceWidth\n    setWidth <= 750 ?  isMobile = true : isMobile = false\n\n\n    let resizedIcon\n    let navType\n    if (isMobile) {\n      resizedIcon = \"small\"\n      navType = \"navMobile\"\n    } else {\n      resizedIcon = \"huge\"\n      navType = \"navDesktop\"\n    }\n    \n\n    return (\n        <Menu secondary fixed=\"top\" widths={1}>\n            <Menu.Item><Icon size={resizedIcon} name='home' color='orange' /></Menu.Item>\n            <Menu.Item><Search className=\"searchBar\" input={{fluid:false}} /></Menu.Item>\n            <Menu.Item><Icon size={resizedIcon} name='user' color='purple' /></Menu.Item>\n        </Menu>\n    )\n\n  }\n\n}\n\nexport default NavBar;"]},"metadata":{},"sourceType":"module"}