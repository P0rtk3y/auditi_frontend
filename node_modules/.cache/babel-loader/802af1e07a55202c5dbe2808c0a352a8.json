{"ast":null,"code":"import { getMyAudiocards } from './myAudioCards';\nexport const updateAudioForm = formData => {\n  return {\n    type: \"UPDATE_AUDIO_FORM\",\n    formData\n  };\n};\nexport const addAudiocard = formData => {\n  return {\n    type: \"ADD_AUDIO_CARD\",\n    formdata\n  };\n};\nexport const createRecording = formData => {\n  console.log(formData);\n  return dispatch => {\n    const audiocardData = {\n      audiocard: {\n        category: formData.category,\n        tags: formData.tags,\n        soundfile: formData.soundfile,\n        soundster: formData.soundster,\n        image: formData.image,\n        user_id: formData.user_id\n      }\n    };\n    console.log(audiocardData);\n    return fetch(\"http://localhost:3000/api/v1/audiocards\", {\n      credentials: \"include\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(audiocardData)\n    }).then(resp => resp.json()).then(response => {\n      if (response.error) {\n        alert(response.error);\n      } else {\n        return dispatch => getMyAudiocards();\n      }\n    }).catch(console.log);\n  };\n};","map":{"version":3,"sources":["/Users/skout/Desktop/Auditi/auditi_frontend/src/actions/audioForm.js"],"names":["getMyAudiocards","updateAudioForm","formData","type","addAudiocard","formdata","createRecording","console","log","dispatch","audiocardData","audiocard","category","tags","soundfile","soundster","image","user_id","fetch","credentials","method","headers","body","JSON","stringify","then","resp","json","response","error","alert","catch"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,gBAA9B;AAEA,OAAO,MAAMC,eAAe,GAAGC,QAAQ,IAAI;AACvC,SAAO;AACHC,IAAAA,IAAI,EAAE,mBADH;AAEHD,IAAAA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,YAAY,GAAGF,QAAQ,IAAI;AACpC,SAAO;AACHC,IAAAA,IAAI,EAAE,gBADH;AAEHE,IAAAA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,MAAMC,eAAe,GAAGJ,QAAQ,IAAI;AACvCK,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACA,SAAOO,QAAQ,IAAI;AACf,UAAMC,aAAa,GAAG;AAClBC,MAAAA,SAAS,EAAE;AACPC,QAAAA,QAAQ,EAAEV,QAAQ,CAACU,QADZ;AAEPC,QAAAA,IAAI,EAAEX,QAAQ,CAACW,IAFR;AAGPC,QAAAA,SAAS,EAAEZ,QAAQ,CAACY,SAHb;AAIPC,QAAAA,SAAS,EAAEb,QAAQ,CAACa,SAJb;AAKPC,QAAAA,KAAK,EAAEd,QAAQ,CAACc,KALT;AAMPC,QAAAA,OAAO,EAAEf,QAAQ,CAACe;AANX;AADO,KAAtB;AAUAV,IAAAA,OAAO,CAACC,GAAR,CAAYE,aAAZ;AACA,WAAOQ,KAAK,CAAC,yCAAD,EAA4C;AACpDC,MAAAA,WAAW,EAAE,SADuC;AAEpDC,MAAAA,MAAM,EAAE,MAF4C;AAGpDC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAH2C;AAMpDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAed,aAAf;AAN8C,KAA5C,CAAL,CASNe,IATM,CASDC,IAAI,IAAIA,IAAI,CAACC,IAAL,EATP,EAUNF,IAVM,CAUDG,QAAQ,IAAI;AACd,UAAGA,QAAQ,CAACC,KAAZ,EAAkB;AACdC,QAAAA,KAAK,CAACF,QAAQ,CAACC,KAAV,CAAL;AACH,OAFD,MAEO;AACH,eAAOpB,QAAQ,IAAIT,eAAe,EAAlC;AACH;AACJ,KAhBM,EAiBN+B,KAjBM,CAiBAxB,OAAO,CAACC,GAjBR,CAAP;AAkBH,GA9BD;AA+BH,CAjCM","sourcesContent":["import {getMyAudiocards} from './myAudioCards'\n\nexport const updateAudioForm = formData => {\n    return {\n        type: \"UPDATE_AUDIO_FORM\",\n        formData\n    }\n}\n\nexport const addAudiocard = formData => {\n    return {\n        type: \"ADD_AUDIO_CARD\",\n        formdata\n    }\n}\n\nexport const createRecording = formData => {\n    console.log(formData)\n    return dispatch => {\n        const audiocardData = { \n            audiocard: {\n                category: formData.category,\n                tags: formData.tags,\n                soundfile: formData.soundfile,\n                soundster: formData.soundster,\n                image: formData.image,\n                user_id: formData.user_id\n            }  \n        }\n        console.log(audiocardData)\n        return fetch(\"http://localhost:3000/api/v1/audiocards\", {\n            credentials: \"include\",\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(audiocardData)\n        })\n        \n        .then(resp => resp.json())\n        .then(response => {\n            if(response.error){\n                alert(response.error)\n            } else {\n                return dispatch => getMyAudiocards()\n            }\n        })\n        .catch(console.log)\n    }\n}"]},"metadata":{},"sourceType":"module"}