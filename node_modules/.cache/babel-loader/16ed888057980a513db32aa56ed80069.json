{"ast":null,"code":"var _jsxFileName = \"/Users/skout/Desktop/Auditi/auditi_frontend/src/components/Audiocard.js\";\nimport { Image, Card, Grid, Icon, Label, Button, Modal, Header, Container } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport React, { useState } from 'react';\nimport Tags from './Tags';\nimport Pizzicato from 'pizzicato';\nimport Count from './Count.js';\nimport { confirmDelete, deleteAudiocard, editAudiocard, confirmEdit, favoriteAudiocard, confirmFavorite } from '../actions/myAudioCards';\n\nconst Audiocard = ({\n  audiocard,\n  confirmDelete,\n  deleteAudiocard,\n  editAudiocard,\n  confirmEdit,\n  favoriteAudiocard,\n  confirmFavorite\n}) => {\n  const [modalState, setModal] = useState(false);\n  let newDate = '';\n\n  if (audiocard.attributes.created_at) {\n    let convertDate = audiocard.attributes.created_at.split('T')[0].split('-');\n    newDate = new Date(convertDate).toDateString();\n  } //play on click\n\n\n  const playSound = () => {\n    console.log(\"PLAYING RECORDING\");\n\n    if (audiocard.attributes.soundfile) {\n      const getSound = new Pizzicato.Sound({\n        source: 'file',\n        options: {\n          path: audiocard.attributes.soundfile\n        }\n      }, () => {\n        getSound.play();\n      });\n    }\n  };\n\n  const tags = JSON.parse(audiocard.attributes.tags);\n  const getTags = tags.map((tag, index) => /*#__PURE__*/React.createElement(Tags, {\n    tag: tag,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }));\n\n  const handleDeleteClick = e => {\n    confirmDelete(audiocard.id);\n    deleteAudiocard(audiocard.id);\n    setModal(false);\n  };\n\n  const addColor = category => {\n    switch (category) {\n      case \"quotes\":\n        return \"#AECBDF\";\n\n      case \"music\":\n        return \"#DFC2AE\";\n\n      case \"nature\":\n        return \"#AEDFC1\";\n\n      case \"personal\":\n        return \"#DFB3AE\";\n\n      case \"joke\":\n        return \"#C99EDB\";\n\n      case \"health\":\n        return \"#DA9333\";\n\n      default:\n        return \"#AEDFD5\";\n    }\n  };\n\n  const addIcon = category => {\n    switch (category) {\n      case \"quotes\":\n        return \"comment alternate\";\n\n      case \"music\":\n        return \"music\";\n\n      case \"nature\":\n        return \"leaf\";\n\n      case \"personal\":\n        return \"user secret\";\n\n      case \"joke\":\n        return \"smile\";\n\n      case \"health\":\n        return \"hand spock\";\n\n      default:\n        return \"find\";\n    }\n  };\n\n  const modifyCardContent = id => {\n    let oldHeader = audiocard.attributes.soundster;\n    let modifyCard = document.querySelector(`div.header.header-${id}`);\n    modifyCard.setAttribute('contenteditable', 'true');\n    let newHeader = modifyCard.innerHTML;\n\n    if (oldHeader !== newHeader) {\n      audiocard.attributes.soundster = newHeader;\n      confirmEdit(audiocard);\n      editAudiocard(audiocard);\n    }\n  };\n\n  const addFavorite = audiocard => {\n    let getIcon = document.querySelector(`a.ui.left.corner.label.icon-${audiocard.id}`).firstElementChild;\n    !getIcon.className.includes('pink') ? getIcon.className = 'pink bullhorn icon' : getIcon.className = 'bullhorn icon';\n\n    if (getIcon.className.includes('pink')) {\n      audiocard.attributes.favorite = true;\n      favoriteAudiocard(audiocard);\n      confirmFavorite(audiocard);\n    } else {\n      audiocard.attributes.favorite = false;\n      favoriteAudiocard(audiocard);\n      confirmFavorite(audiocard);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    color: \"olive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Icon.Group, {\n    size: \"huge\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    fluid: true,\n    src: audiocard.attributes.image,\n    label: {\n      as: 'a',\n      corner: 'left',\n      className: `icon-${audiocard.id}`,\n      icon: audiocard.attributes.favorite ? \"pink bullhorn\" : \"bullhorn\",\n      onClick: e => addFavorite(audiocard)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Icon, {\n    corner: \"bottom right\",\n    inverted: true,\n    style: {\n      color: addColor(audiocard.attributes.category)\n    },\n    name: addIcon(audiocard.attributes.category),\n    size: \"huge\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Icon, {\n    corner: \"bottom left\",\n    color: \"yellow\",\n    name: \"circle\",\n    size: \"huge\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Card.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    className: `header-${audiocard.id}`,\n    onClick: e => modifyCardContent(audiocard.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 25\n    }\n  }, audiocard.attributes.soundster), /*#__PURE__*/React.createElement(Card.Meta, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 29\n    }\n  }, \"Created on \", newDate))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card.Content, {\n    extra: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Row, {\n    column: 2,\n    className: \"tag-button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 33\n    }\n  }, getTags))), /*#__PURE__*/React.createElement(Count, {\n    playSound: playSound,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Label, {\n    corner: \"right\",\n    color: \"yellow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    dimmer: true,\n    trigger: /*#__PURE__*/React.createElement(Icon, {\n      name: \"times circle\",\n      className: \"deleteIcon\",\n      onClick: e => setModal(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 38\n      }\n    }),\n    open: modalState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Modal.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"trash alternate outline\",\n    color: \"olive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 37\n    }\n  }), \"Are you sure you want to delete?\")), /*#__PURE__*/React.createElement(Modal.Actions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"green\",\n    inverted: true,\n    onClick: e => handleDeleteClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"checkmark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 37\n    }\n  }), \" Yes\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"red\",\n    inverted: true,\n    onClick: e => setModal(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"checkmark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 37\n    }\n  }), \" No\")))));\n};\n\nexport default connect(null, {\n  confirmDelete,\n  deleteAudiocard,\n  editAudiocard,\n  confirmEdit,\n  favoriteAudiocard,\n  confirmFavorite\n})(Audiocard);","map":{"version":3,"sources":["/Users/skout/Desktop/Auditi/auditi_frontend/src/components/Audiocard.js"],"names":["Image","Card","Grid","Icon","Label","Button","Modal","Header","Container","connect","React","useState","Tags","Pizzicato","Count","confirmDelete","deleteAudiocard","editAudiocard","confirmEdit","favoriteAudiocard","confirmFavorite","Audiocard","audiocard","modalState","setModal","newDate","attributes","created_at","convertDate","split","Date","toDateString","playSound","console","log","soundfile","getSound","Sound","source","options","path","play","tags","JSON","parse","getTags","map","tag","index","handleDeleteClick","e","id","addColor","category","addIcon","modifyCardContent","oldHeader","soundster","modifyCard","document","querySelector","setAttribute","newHeader","innerHTML","addFavorite","getIcon","firstElementChild","className","includes","favorite","image","as","corner","icon","onClick","color"],"mappings":"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","sourcesContent":["import { Image, Card, Grid, Icon, Label, Button, Modal, Header, Container } from 'semantic-ui-react';\nimport { connect } from 'react-redux'\nimport React, {useState} from 'react'\nimport Tags from './Tags'\nimport Pizzicato from 'pizzicato'\nimport Count from './Count.js'\nimport {confirmDelete, deleteAudiocard, editAudiocard, confirmEdit, favoriteAudiocard, confirmFavorite} from '../actions/myAudioCards'\n\nconst Audiocard = ({audiocard, confirmDelete, deleteAudiocard, editAudiocard, confirmEdit, favoriteAudiocard, confirmFavorite}) => {\n    \n    const [modalState, setModal] = useState(false)\n\n    let newDate = ''\n    if (audiocard.attributes.created_at){\n        let convertDate = audiocard.attributes.created_at.split('T')[0].split('-')\n        newDate = new Date(convertDate).toDateString()\n    }\n\n    //play on click\n    const playSound = () => {\n        console.log(\"PLAYING RECORDING\")\n        if(audiocard.attributes.soundfile){\n            const getSound = new Pizzicato.Sound({\n                source: 'file',\n                options: {path: audiocard.attributes.soundfile}\n            }, () => {\n                getSound.play()\n            })\n        }\n    }\n\n\n    const tags = JSON.parse(audiocard.attributes.tags)\n\n    const getTags = tags.map((tag, index) => \n        <Tags tag={tag} key={index} />\n    )\n\n    const handleDeleteClick = e => {\n        confirmDelete(audiocard.id)\n        deleteAudiocard(audiocard.id)\n        setModal(false)\n    }\n\n    const addColor = category => {\n        switch(category){\n            case \"quotes\":\n                return \"#AECBDF\"\n            case \"music\":\n                return \"#DFC2AE\"\n            case \"nature\":\n                return \"#AEDFC1\"\n            case \"personal\":\n                return \"#DFB3AE\"\n            case \"joke\":\n                return \"#C99EDB\"\n            case \"health\":\n                return \"#DA9333\"\n            default:\n                return \"#AEDFD5\"\n        }\n    }\n\n    const addIcon = category => {\n        switch(category){\n            case \"quotes\":\n                return \"comment alternate\"\n            case \"music\":\n                return \"music\"\n            case \"nature\":\n                return \"leaf\"\n            case \"personal\":\n                return \"user secret\"\n            case \"joke\":\n                return \"smile\"\n            case \"health\":\n                return \"hand spock\"\n            default:\n                return \"find\"\n        }\n    }\n\n    const modifyCardContent = id => {\n        let oldHeader = audiocard.attributes.soundster\n        let modifyCard = document.querySelector(`div.header.header-${id}`)\n            modifyCard.setAttribute('contenteditable', 'true')\n        let newHeader = modifyCard.innerHTML\n\n        if(oldHeader !== newHeader){\n            audiocard.attributes.soundster = newHeader\n            confirmEdit(audiocard)\n            editAudiocard(audiocard)\n        }\n    }\n\n    const addFavorite = audiocard => {\n        let getIcon = document.querySelector(`a.ui.left.corner.label.icon-${audiocard.id}`).firstElementChild\n        !getIcon.className.includes('pink') ? getIcon.className = 'pink bullhorn icon' : getIcon.className = 'bullhorn icon'\n        if(getIcon.className.includes('pink')){\n            audiocard.attributes.favorite = true\n            favoriteAudiocard(audiocard)\n            confirmFavorite(audiocard)\n        }else{\n            audiocard.attributes.favorite = false\n            favoriteAudiocard(audiocard)\n            confirmFavorite(audiocard)\n        }\n    }\n   \n        return (\n                <Card color=\"olive\">\n                    <Icon.Group size='huge'>\n                        <Image \n                            fluid\n                            src={audiocard.attributes.image} \n                            label={{ \n                                as: 'a', \n                                corner: 'left',\n                                className: `icon-${audiocard.id}`,\n                                icon: audiocard.attributes.favorite ? \"pink bullhorn\" : \"bullhorn\",\n                                onClick: e => addFavorite(audiocard)\n                            }}\n                        />\n                        <Icon \n                            corner='bottom right' \n                            inverted\n                            style={{color:addColor(audiocard.attributes.category)}} \n                            name={addIcon(audiocard.attributes.category)} \n                            size=\"huge\"\n                        />\n                        <Icon corner='bottom left' color='yellow' name='circle' size=\"huge\"/>\n                    </Icon.Group>\n                    <Card.Content>\n                        <Card.Header \n                            className={`header-${audiocard.id}`} \n                            onClick={e => modifyCardContent(audiocard.id)}>{audiocard.attributes.soundster}\n                        </Card.Header>\n                        <Card.Meta>\n                            <span className='date'>Created on {newDate}</span>\n                        </Card.Meta>\n                    </Card.Content>\n                    <div className='icon-container'>\n                        <Card.Content extra>\n                            <Grid>\n                                <Grid.Row column={2} className='tag-button-container'>\n                                    {getTags}\n                                </Grid.Row>\n                            </Grid>\n                        </Card.Content>\n                        <Count playSound={playSound}/>\n                    </div>\n                    <Label corner='right' \n                        color='yellow' \n                    >\n                        <Modal \n                            dimmer\n                            trigger={<Icon name=\"times circle\" className='deleteIcon' onClick={e => setModal(true)}/>} \n                            open={modalState}\n                        >\n                            <Header />\n                            <Modal.Content>\n                                <p>\n                                    <Icon name=\"trash alternate outline\" color=\"olive\" /> \n                                    Are you sure you want to delete?\n                                </p>\n                            </Modal.Content>\n                            <Modal.Actions>\n                                <Button color='green' inverted onClick={e => handleDeleteClick()}>\n                                    <Icon name='checkmark' /> Yes\n                                </Button>\n                                <Button color='red' inverted onClick={e => setModal(false)}>\n                                    <Icon name='checkmark'/> No\n                                </Button>\n                            </Modal.Actions>\n                        </Modal>\n                    </Label>\n                </Card>\n        )\n}\n\n\nexport default connect(null, {confirmDelete, deleteAudiocard, editAudiocard, confirmEdit, favoriteAudiocard, confirmFavorite})(Audiocard)\n"]},"metadata":{},"sourceType":"module"}