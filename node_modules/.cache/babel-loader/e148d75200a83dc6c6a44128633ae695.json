{"ast":null,"code":"var _jsxFileName = \"/Users/skout/Desktop/Auditi/auditi_frontend/src/components/Audiocard.js\";\nimport React from 'react';\nimport { Image, Card, Grid, Button, Icon, Modal, Header } from 'semantic-ui-react';\nimport myAudioCards from '../reducers/myAudioCards';\nimport { connect } from 'react-redux';\nimport Tags from './Tags';\nimport Pizzicato from 'pizzicato';\nimport { confirmDelete, deleteAudiocard } from '../actions/myAudioCards';\n\nconst Audiocard = ({\n  audiocard\n}) => {\n  let newDate = '';\n\n  if (audiocard.attributes.created_at) {\n    let convertDate = audiocard.attributes.created_at.split('T')[0].split('-');\n    newDate = new Date(convertDate).toDateString();\n  } //play on hover\n\n\n  const playRecording = () => {\n    if (audiocard.attributes.soundfile) {\n      const getSound = new Pizzicato.Sound({\n        source: 'file',\n        options: {\n          path: audiocard.attributes.soundfile\n        }\n      }, () => {// getSound.play()\n      });\n    }\n  };\n\n  const tags = JSON.parse(audiocard.attributes.tags);\n  const getTags = tags.map((tag, index) => /*#__PURE__*/React.createElement(Tags, {\n    tag: tag,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }));\n\n  const handleClick = e => {\n    console.log(\"CLICKED!\");\n    return /*#__PURE__*/React.createElement(Modal, {\n      trigger: /*#__PURE__*/React.createElement(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }\n      }, \"Show Modal\"),\n      closeIcon: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      icon: \"archive\",\n      content: \"Archive Old Messages\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Modal.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, \"Are you sure you want to delete?\")), /*#__PURE__*/React.createElement(Modal.Actions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"remove\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }), \" No\"), /*#__PURE__*/React.createElement(Button, {\n      color: \"green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"checkmark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }), \" Yes\")));\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    color: \"olive\",\n    closeIcon: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: audiocard.attributes.image,\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Card.Content, {\n    onMouseOver: playRecording(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 29\n    }\n  }, audiocard.attributes.soundster), /*#__PURE__*/React.createElement(Card.Meta, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 33\n    }\n  }, \"Created on \", newDate)), /*#__PURE__*/React.createElement(Card.Description, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 29\n    }\n  }, \"(\", audiocard.attributes.category, \")\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card.Content, {\n    extra: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Row, {\n    column: 2,\n    className: \"tag-button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 37\n    }\n  }, getTags)))), /*#__PURE__*/React.createElement(Icon, {\n    name: \"times circle\",\n    color: \"red\",\n    className: \"deleteIcon\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }));\n};\n\nexport default connect(null, {\n  confirmDelete,\n  deleteAudiocard\n})(Audiocard);","map":{"version":3,"sources":["/Users/skout/Desktop/Auditi/auditi_frontend/src/components/Audiocard.js"],"names":["React","Image","Card","Grid","Button","Icon","Modal","Header","myAudioCards","connect","Tags","Pizzicato","confirmDelete","deleteAudiocard","Audiocard","audiocard","newDate","attributes","created_at","convertDate","split","Date","toDateString","playRecording","soundfile","getSound","Sound","source","options","path","tags","JSON","parse","getTags","map","tag","index","handleClick","e","console","log","image","soundster","category"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Image, Card, Grid, Button, Icon, Modal, Header } from 'semantic-ui-react';\nimport myAudioCards from '../reducers/myAudioCards';\nimport { connect } from 'react-redux'\nimport Tags from './Tags'\nimport Pizzicato from 'pizzicato'\nimport {confirmDelete, deleteAudiocard} from '../actions/myAudioCards'\n\nconst Audiocard = ({audiocard}) => {\n\n    let newDate = ''\n    if (audiocard.attributes.created_at){\n        let convertDate = audiocard.attributes.created_at.split('T')[0].split('-')\n        newDate = new Date(convertDate).toDateString()\n    }\n\n    //play on hover\n    const playRecording = () => {\n        if(audiocard.attributes.soundfile){\n            const getSound = new Pizzicato.Sound({\n                source: 'file',\n                options: {path: audiocard.attributes.soundfile}\n            }, () => {\n                // getSound.play()\n            })\n        }\n    }\n\n    const tags = JSON.parse(audiocard.attributes.tags)\n\n    const getTags = tags.map((tag, index) => \n        <Tags tag={tag} key={index} />\n    )\n\n    const handleClick = e => {\n        console.log(\"CLICKED!\")\n        return (\n            <Modal trigger={<Button>Show Modal</Button>} closeIcon>\n                <Header icon='archive' content='Archive Old Messages' />\n                <Modal.Content>\n                <p>\n                    Are you sure you want to delete?\n                </p>\n                </Modal.Content>\n                <Modal.Actions>\n                <Button color='red'>\n                    <Icon name='remove' /> No\n                </Button>\n                <Button color='green'>\n                    <Icon name='checkmark' /> Yes\n                </Button>\n                </Modal.Actions>\n            </Modal>\n        )\n    }\n\n    \n\n        return (\n                    <Card color=\"olive\" closeIcon>\n                        <Image src={audiocard.attributes.image} size='large'/> \n                        <Card.Content\n                            onMouseOver={playRecording()}\n                        >\n                            <Card.Header>{audiocard.attributes.soundster}</Card.Header>\n                            <Card.Meta>\n                                <span className='date'>Created on {newDate}</span>\n                            </Card.Meta>\n                            <Card.Description>\n                                ({audiocard.attributes.category})\n                            </Card.Description>\n                        </Card.Content>\n                        <div className='icon-container'>\n                            <Card.Content extra>\n                                <Grid>\n                                    <Grid.Row column={2} className='tag-button-container'>\n                                        {getTags}\n                                    </Grid.Row>\n                                </Grid>\n                            </Card.Content>\n                        </div>\n                        <Icon name=\"times circle\" color='red' className='deleteIcon' onClick={handleClick}/>\n                    </Card>\n        )\n}\n\nexport default connect(null, {confirmDelete, deleteAudiocard})(Audiocard)"]},"metadata":{},"sourceType":"module"}