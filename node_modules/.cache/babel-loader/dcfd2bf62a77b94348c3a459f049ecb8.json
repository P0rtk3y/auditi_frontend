{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { useCopyToClipboard } from '../CopyToClipboard';\nvar checkIcon = React.createElement(\"svg\", {\n  style: {\n    height: '.7rem',\n    width: '0.7rem'\n  },\n  viewBox: \"0 0 512 512\"\n}, React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M461.6,109.6l-54.9-43.3c-1.7-1.4-3.8-2.4-6.2-2.4c-2.4,0-4.6,1-6.3,2.5L194.5,323c0,0-78.5-75.5-80.7-77.7  c-2.2-2.2-5.1-5.9-9.5-5.9c-4.4,0-6.4,3.1-8.7,5.4c-1.7,1.8-29.7,31.2-43.5,45.8c-0.8,0.9-1.3,1.4-2,2.1c-1.2,1.7-2,3.6-2,5.7  c0,2.2,0.8,4,2,5.7l2.8,2.6c0,0,139.3,133.8,141.6,136.1c2.3,2.3,5.1,5.2,9.2,5.2c4,0,7.3-4.3,9.2-6.2L462,121.8  c1.2-1.7,2-3.6,2-5.8C464,113.5,463,111.4,461.6,109.6z\"\n}));\nvar copyIcon = React.createElement(\"svg\", {\n  style: {\n    height: '.7rem',\n    width: '0.7rem'\n  },\n  viewBox: \"0 0 16 16\"\n}, React.createElement(\"path\", {\n  d: \"M2,0v1v2H0v13h13v-2h2h1V1V0H3H2z M15,1v12h-2V3H3V1H15z\",\n  fill: \"currentColor \"\n}));\n\nvar CodeSnippetLabel = function CodeSnippetLabel(props) {\n  var copyable = props.copyable,\n      label = props.label,\n      mode = props.mode,\n      value = props.value;\n  var hasLabel = label !== false;\n\n  var _useCopyToClipboard = useCopyToClipboard(value),\n      _useCopyToClipboard2 = _slicedToArray(_useCopyToClipboard, 2),\n      active = _useCopyToClipboard2[0],\n      onCopy = _useCopyToClipboard2[1];\n\n  return hasLabel && React.createElement(\"div\", {\n    onClick: copyable ? onCopy : undefined,\n    style: {\n      border: '1px solid #ccc',\n      color: '#ccc',\n      cursor: copyable ? 'pointer' : 'default',\n      display: 'flex',\n      fontSize: '0.8rem',\n      fontFamily: 'monospace',\n      lineHeight: 1,\n      padding: '0.2rem 0.35rem',\n      position: 'absolute',\n      right: '0.8rem',\n      top: '0.8rem',\n      zIndex: 100\n    },\n    title: copyable ? 'Copy' : undefined\n  }, React.createElement(\"div\", null, label || mode), copyable && React.createElement(\"div\", {\n    style: {\n      marginLeft: '5px'\n    }\n  }, active ? checkIcon : copyIcon));\n};\n\nexport default CodeSnippetLabel;","map":{"version":3,"sources":["/Users/skout/Desktop/Auditi/auditi_frontend/node_modules/@stardust-ui/docs-components/dist/es/CodeSnippet/CodeSnippetLabel.js"],"names":["_slicedToArray","React","useCopyToClipboard","checkIcon","createElement","style","height","width","viewBox","fill","d","copyIcon","CodeSnippetLabel","props","copyable","label","mode","value","hasLabel","_useCopyToClipboard","_useCopyToClipboard2","active","onCopy","onClick","undefined","border","color","cursor","display","fontSize","fontFamily","lineHeight","padding","position","right","top","zIndex","title","marginLeft"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,0CAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,kBAAT,QAAmC,oBAAnC;AACA,IAAIC,SAAS,GAAGF,KAAK,CAACG,aAAN,CAAoB,KAApB,EAA2B;AACzCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE,OADH;AAELC,IAAAA,KAAK,EAAE;AAFF,GADkC;AAKzCC,EAAAA,OAAO,EAAE;AALgC,CAA3B,EAMbP,KAAK,CAACG,aAAN,CAAoB,MAApB,EAA4B;AAC7BK,EAAAA,IAAI,EAAE,cADuB;AAE7BC,EAAAA,CAAC,EAAE;AAF0B,CAA5B,CANa,CAAhB;AAUA,IAAIC,QAAQ,GAAGV,KAAK,CAACG,aAAN,CAAoB,KAApB,EAA2B;AACxCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE,OADH;AAELC,IAAAA,KAAK,EAAE;AAFF,GADiC;AAKxCC,EAAAA,OAAO,EAAE;AAL+B,CAA3B,EAMZP,KAAK,CAACG,aAAN,CAAoB,MAApB,EAA4B;AAC7BM,EAAAA,CAAC,EAAE,wDAD0B;AAE7BD,EAAAA,IAAI,EAAE;AAFuB,CAA5B,CANY,CAAf;;AAWA,IAAIG,gBAAgB,GAAG,SAASA,gBAAT,CAA0BC,KAA1B,EAAiC;AACtD,MAAIC,QAAQ,GAAGD,KAAK,CAACC,QAArB;AAAA,MACIC,KAAK,GAAGF,KAAK,CAACE,KADlB;AAAA,MAEIC,IAAI,GAAGH,KAAK,CAACG,IAFjB;AAAA,MAGIC,KAAK,GAAGJ,KAAK,CAACI,KAHlB;AAIA,MAAIC,QAAQ,GAAGH,KAAK,KAAK,KAAzB;;AAEA,MAAII,mBAAmB,GAAGjB,kBAAkB,CAACe,KAAD,CAA5C;AAAA,MACIG,oBAAoB,GAAGpB,cAAc,CAACmB,mBAAD,EAAsB,CAAtB,CADzC;AAAA,MAEIE,MAAM,GAAGD,oBAAoB,CAAC,CAAD,CAFjC;AAAA,MAGIE,MAAM,GAAGF,oBAAoB,CAAC,CAAD,CAHjC;;AAKA,SAAOF,QAAQ,IAAIjB,KAAK,CAACG,aAAN,CAAoB,KAApB,EAA2B;AAC5CmB,IAAAA,OAAO,EAAET,QAAQ,GAAGQ,MAAH,GAAYE,SADe;AAE5CnB,IAAAA,KAAK,EAAE;AACLoB,MAAAA,MAAM,EAAE,gBADH;AAELC,MAAAA,KAAK,EAAE,MAFF;AAGLC,MAAAA,MAAM,EAAEb,QAAQ,GAAG,SAAH,GAAe,SAH1B;AAILc,MAAAA,OAAO,EAAE,MAJJ;AAKLC,MAAAA,QAAQ,EAAE,QALL;AAMLC,MAAAA,UAAU,EAAE,WANP;AAOLC,MAAAA,UAAU,EAAE,CAPP;AAQLC,MAAAA,OAAO,EAAE,gBARJ;AASLC,MAAAA,QAAQ,EAAE,UATL;AAULC,MAAAA,KAAK,EAAE,QAVF;AAWLC,MAAAA,GAAG,EAAE,QAXA;AAYLC,MAAAA,MAAM,EAAE;AAZH,KAFqC;AAgB5CC,IAAAA,KAAK,EAAEvB,QAAQ,GAAG,MAAH,GAAYU;AAhBiB,GAA3B,EAiBhBvB,KAAK,CAACG,aAAN,CAAoB,KAApB,EAA2B,IAA3B,EAAiCW,KAAK,IAAIC,IAA1C,CAjBgB,EAiBiCF,QAAQ,IAAIb,KAAK,CAACG,aAAN,CAAoB,KAApB,EAA2B;AACzFC,IAAAA,KAAK,EAAE;AACLiC,MAAAA,UAAU,EAAE;AADP;AADkF,GAA3B,EAI7DjB,MAAM,GAAGlB,SAAH,GAAeQ,QAJwC,CAjB7C,CAAnB;AAsBD,CAlCD;;AAoCA,eAAeC,gBAAf","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { useCopyToClipboard } from '../CopyToClipboard';\nvar checkIcon = React.createElement(\"svg\", {\n  style: {\n    height: '.7rem',\n    width: '0.7rem'\n  },\n  viewBox: \"0 0 512 512\"\n}, React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M461.6,109.6l-54.9-43.3c-1.7-1.4-3.8-2.4-6.2-2.4c-2.4,0-4.6,1-6.3,2.5L194.5,323c0,0-78.5-75.5-80.7-77.7  c-2.2-2.2-5.1-5.9-9.5-5.9c-4.4,0-6.4,3.1-8.7,5.4c-1.7,1.8-29.7,31.2-43.5,45.8c-0.8,0.9-1.3,1.4-2,2.1c-1.2,1.7-2,3.6-2,5.7  c0,2.2,0.8,4,2,5.7l2.8,2.6c0,0,139.3,133.8,141.6,136.1c2.3,2.3,5.1,5.2,9.2,5.2c4,0,7.3-4.3,9.2-6.2L462,121.8  c1.2-1.7,2-3.6,2-5.8C464,113.5,463,111.4,461.6,109.6z\"\n}));\nvar copyIcon = React.createElement(\"svg\", {\n  style: {\n    height: '.7rem',\n    width: '0.7rem'\n  },\n  viewBox: \"0 0 16 16\"\n}, React.createElement(\"path\", {\n  d: \"M2,0v1v2H0v13h13v-2h2h1V1V0H3H2z M15,1v12h-2V3H3V1H15z\",\n  fill: \"currentColor \"\n}));\n\nvar CodeSnippetLabel = function CodeSnippetLabel(props) {\n  var copyable = props.copyable,\n      label = props.label,\n      mode = props.mode,\n      value = props.value;\n  var hasLabel = label !== false;\n\n  var _useCopyToClipboard = useCopyToClipboard(value),\n      _useCopyToClipboard2 = _slicedToArray(_useCopyToClipboard, 2),\n      active = _useCopyToClipboard2[0],\n      onCopy = _useCopyToClipboard2[1];\n\n  return hasLabel && React.createElement(\"div\", {\n    onClick: copyable ? onCopy : undefined,\n    style: {\n      border: '1px solid #ccc',\n      color: '#ccc',\n      cursor: copyable ? 'pointer' : 'default',\n      display: 'flex',\n      fontSize: '0.8rem',\n      fontFamily: 'monospace',\n      lineHeight: 1,\n      padding: '0.2rem 0.35rem',\n      position: 'absolute',\n      right: '0.8rem',\n      top: '0.8rem',\n      zIndex: 100\n    },\n    title: copyable ? 'Copy' : undefined\n  }, React.createElement(\"div\", null, label || mode), copyable && React.createElement(\"div\", {\n    style: {\n      marginLeft: '5px'\n    }\n  }, active ? checkIcon : copyIcon));\n};\n\nexport default CodeSnippetLabel;"]},"metadata":{},"sourceType":"module"}