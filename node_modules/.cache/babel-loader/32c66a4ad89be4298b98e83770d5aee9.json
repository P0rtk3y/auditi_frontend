{"ast":null,"code":"export const setMyAudioCards = audioCards => {\n  return {\n    type: \"SET_MY_AUDIOCARDS\",\n    audioCards\n  };\n};\nexport const getMyAudiocards = () => {\n  return dispatch => {\n    return fetch(\"http://localhost:3000/api/v1/audiocards\", {\n      credentials: \"include\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(resp => resp.json()).then(response => {\n      if (response.error) {\n        alert(response.error);\n      } else {\n        dispatch(setMyAudiocards());\n      }\n    }).catch(console.log);\n  };\n};","map":{"version":3,"sources":["/Users/skout/Desktop/Auditi/auditi_frontend/src/actions/myAudioCards.js"],"names":["setMyAudioCards","audioCards","type","getMyAudiocards","dispatch","fetch","credentials","method","headers","then","resp","json","response","error","alert","setMyAudiocards","catch","console","log"],"mappings":"AAAA,OAAO,MAAMA,eAAe,GAAGC,UAAU,IAAI;AACzC,SAAO;AACHC,IAAAA,IAAI,EAAE,mBADH;AAEHD,IAAAA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,eAAe,GAAG,MAAM;AACjC,SAAOC,QAAQ,IAAI;AACf,WAAOC,KAAK,CAAC,yCAAD,EAA4C;AACpDC,MAAAA,WAAW,EAAE,SADuC;AAEpDC,MAAAA,MAAM,EAAE,KAF4C;AAGpDC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAH2C,KAA5C,CAAL,CAOFC,IAPE,CAOGC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAPX,EAQFF,IARE,CAQGG,QAAQ,IAAI;AACd,UAAIA,QAAQ,CAACC,KAAb,EAAmB;AACfC,QAAAA,KAAK,CAACF,QAAQ,CAACC,KAAV,CAAL;AACH,OAFD,MAEO;AACHT,QAAAA,QAAQ,CAACW,eAAe,EAAhB,CAAR;AACH;AACJ,KAdE,EAeFC,KAfE,CAeIC,OAAO,CAACC,GAfZ,CAAP;AAgBH,GAjBD;AAkBH,CAnBM","sourcesContent":["export const setMyAudioCards = audioCards => {\n    return {\n        type: \"SET_MY_AUDIOCARDS\",\n        audioCards\n    }\n}\n\nexport const getMyAudiocards = () => {\n    return dispatch => {\n        return fetch(\"http://localhost:3000/api/v1/audiocards\", {\n            credentials: \"include\",\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n        })\n            .then(resp => resp.json())\n            .then(response => {\n                if (response.error){\n                    alert(response.error)\n                } else {\n                    dispatch(setMyAudiocards())\n                }\n            })\n            .catch(console.log)\n    }\n}"]},"metadata":{},"sourceType":"module"}