{"ast":null,"code":"var _jsxFileName = \"/Users/skout/Desktop/Auditi/auditi_frontend/src/components/Audiocard.js\";\nimport React from 'react';\nimport { Image, Card, Grid, Button, Reveal, Icon } from 'semantic-ui-react';\nimport myAudioCards from '../reducers/myAudioCards';\nimport { connect } from 'react-redux';\nimport Tags from './Tags';\nimport Pizzicato from 'pizzicato';\nimport { confirmDelete, deleteAudiocard } from '../actions/myAudioCards';\n\nconst Audiocard = ({\n  audiocard\n}) => {\n  let newDate = '';\n\n  if (audiocard.attributes.created_at) {\n    let convertDate = audiocard.attributes.created_at.split('T')[0].split('-');\n    newDate = new Date(convertDate).toDateString();\n  } //play on hover\n\n\n  const playRecording = () => {\n    if (audiocard.attributes.soundfile) {\n      const getSound = new Pizzicato.Sound({\n        source: 'file',\n        options: {\n          path: audiocard.attributes.soundfile\n        }\n      }, () => {// getSound.play()\n      });\n    }\n  };\n\n  const tags = JSON.parse(audiocard.attributes.tags);\n  const getTags = tags.map((tag, index) => /*#__PURE__*/React.createElement(Tags, {\n    tag: tag,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }));\n  return /*#__PURE__*/React.createElement(Card, {\n    color: \"olive\",\n    animated: \"move\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Reveal, {\n    animated: \"fade\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Reveal.Content, {\n    visible: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Card.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: audiocard.attributes.image,\n    size: \"medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 43\n    }\n  }))), /*#__PURE__*/React.createElement(Card.Content, {\n    onMouseOver: playRecording(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 37\n    }\n  }, audiocard.attributes.soundster), /*#__PURE__*/React.createElement(Card.Meta, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 41\n    }\n  }, \"Created on \", newDate)), /*#__PURE__*/React.createElement(Card.Description, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 37\n    }\n  }, \"(\", audiocard.attributes.category, \")\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Card.Content, {\n    extra: true,\n    visible: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Row, {\n    column: 2,\n    className: \"tag-button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 45\n    }\n  }, getTags))), /*#__PURE__*/React.createElement(Card.Content, {\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    icon: \"times circle\",\n    color: \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 41\n    }\n  })))), /*#__PURE__*/React.createElement(Reveal.Content, {\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cardIcon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"pencil alternate\",\n    large: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 37\n    }\n  })))));\n};\n\nexport default connect(null, {\n  confirmDelete,\n  deleteAudiocard\n})(Audiocard);","map":{"version":3,"sources":["/Users/skout/Desktop/Auditi/auditi_frontend/src/components/Audiocard.js"],"names":["React","Image","Card","Grid","Button","Reveal","Icon","myAudioCards","connect","Tags","Pizzicato","confirmDelete","deleteAudiocard","Audiocard","audiocard","newDate","attributes","created_at","convertDate","split","Date","toDateString","playRecording","soundfile","getSound","Sound","source","options","path","tags","JSON","parse","getTags","map","tag","index","image","soundster","category"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Image, Card, Grid, Button, Reveal, Icon} from 'semantic-ui-react';\nimport myAudioCards from '../reducers/myAudioCards';\nimport { connect } from 'react-redux'\nimport Tags from './Tags'\nimport Pizzicato from 'pizzicato'\nimport {confirmDelete, deleteAudiocard} from '../actions/myAudioCards'\n\nconst Audiocard = ({audiocard}) => {\n\n    let newDate = ''\n    if (audiocard.attributes.created_at){\n        let convertDate = audiocard.attributes.created_at.split('T')[0].split('-')\n        newDate = new Date(convertDate).toDateString()\n    }\n\n    //play on hover\n    const playRecording = () => {\n        if(audiocard.attributes.soundfile){\n            const getSound = new Pizzicato.Sound({\n                source: 'file',\n                options: {path: audiocard.attributes.soundfile}\n            }, () => {\n                // getSound.play()\n            })\n        }\n    }\n\n    const tags = JSON.parse(audiocard.attributes.tags)\n\n    const getTags = tags.map((tag, index) => \n        <Tags tag={tag} key={index} />\n    )\n\n    \n\n        return (\n                    <Card color=\"olive\" animated='move'>\n                        <Reveal animated='fade'>\n                            <Reveal.Content visible>\n                                <Card.Content>\n                                    <span><Image src={audiocard.attributes.image} size='medium'/></span>\n                                </Card.Content>\n                                <Card.Content\n                                    onMouseOver={playRecording()}\n                                >\n                                    <Card.Header>{audiocard.attributes.soundster}</Card.Header>\n                                    <Card.Meta>\n                                        <span className='date'>Created on {newDate}</span>\n                                    </Card.Meta>\n                                    <Card.Description>\n                                        ({audiocard.attributes.category})\n                                    </Card.Description>\n                                </Card.Content>\n                                <div className='icon-container'>\n                                    <Card.Content extra visible>\n                                        <Grid>\n                                            <Grid.Row column={2} className='tag-button-container'>\n                                                {getTags}\n                                            </Grid.Row>\n                                        </Grid>\n                                    </Card.Content>\n                                    <Card.Content hidden>\n                                        <Button icon =\"times circle\" color='red' />\n                                    </Card.Content>\n                                </div>\n                            </Reveal.Content>\n                            <Reveal.Content hidden>\n                                <div className=\"cardIcon\">\n                                    <Icon name=\"pencil alternate\" large /> \n                                </div>\n                            </Reveal.Content>\n                        </Reveal>\n                    </Card>\n        )\n}\n\nexport default connect(null, {confirmDelete, deleteAudiocard})(Audiocard)"]},"metadata":{},"sourceType":"module"}