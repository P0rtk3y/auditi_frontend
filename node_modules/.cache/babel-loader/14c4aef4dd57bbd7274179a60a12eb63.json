{"ast":null,"code":"//synchronous action creators\nexport var setCurrentUser=function setCurrentUser(user){return{type:\"SET_CURRENT_USER\",user:user};};export var clearCurrentUser=function clearCurrentUser(){return{type:\"CLEAR_CURRENT_USER\"};};//asynchronous action creators\nexport var login=function login(credentials){return function(dispatch){return fetch(\"http://localhost:3000/api/v1/login\",{credentials:\"include\",method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(credentials)}).then(function(resp){return resp.json();}).then(function(user){if(user.error){alert(user.error);}else{dispatch(setCurrentUser(user));}}).catch(console.log);};};export var getCurrentUser=function getCurrentUser(){return function(dispatch){return fetch(\"http://localhost:3000/api/v1/get_current_user\",{credentials:\"include\",method:\"GET\",headers:{\"Content-Type\":\"application/json\"}}).then(function(resp){return resp.json();}).then(function(user){if(user.error){alert(user.error);}else{dispatch(setCurrentUser(user));}}).catch(console.log);};};export var logout=function logout(){return function(dispatch){dispatch(clearCurrentUser());return fetch('http://localhost:3000/api/v1/logout',{credentials:\"include\",method:\"DELETE\"});};};","map":{"version":3,"sources":["/Users/skout/Desktop/Auditi/auditi_frontend/src/actions/currentUser.js"],"names":["setCurrentUser","user","type","clearCurrentUser","login","credentials","dispatch","fetch","method","headers","body","JSON","stringify","then","resp","json","error","alert","catch","console","log","getCurrentUser","logout"],"mappings":"AAAA;AACA,MAAO,IAAMA,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAAC,IAAI,CAAI,CAClC,MAAO,CACHC,IAAI,CAAE,kBADH,CAEHD,IAAI,CAAJA,IAFG,CAAP,CAIH,CALM,CAOP,MAAO,IAAME,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAClC,MAAO,CACHD,IAAI,CAAE,oBADH,CAAP,CAGH,CAJM,CAOP;AACA,MAAO,IAAME,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAAAC,WAAW,CAAI,CAChC,MAAO,UAAAC,QAAQ,CAAI,CACf,MAAOC,CAAAA,KAAK,CAAC,oCAAD,CAAuC,CAC/CF,WAAW,CAAE,SADkC,CAE/CG,MAAM,CAAE,MAFuC,CAG/CC,OAAO,CAAE,CACL,eAAgB,kBADX,CAHsC,CAM/CC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeP,WAAf,CANyC,CAAvC,CAAL,CAQFQ,IARE,CAQG,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACC,IAAL,EAAJ,EARP,EASFF,IATE,CASG,SAAAZ,IAAI,CAAI,CACV,GAAIA,IAAI,CAACe,KAAT,CAAe,CACXC,KAAK,CAAChB,IAAI,CAACe,KAAN,CAAL,CACH,CAFD,IAEO,CACHV,QAAQ,CAACN,cAAc,CAACC,IAAD,CAAf,CAAR,CACH,CACJ,CAfE,EAgBFiB,KAhBE,CAgBIC,OAAO,CAACC,GAhBZ,CAAP,CAiBH,CAlBD,CAmBH,CApBM,CAsBP,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAChC,MAAO,UAAAf,QAAQ,CAAI,CACf,MAAOC,CAAAA,KAAK,CAAC,+CAAD,CAAkD,CAC1DF,WAAW,CAAE,SAD6C,CAE1DG,MAAM,CAAE,KAFkD,CAG1DC,OAAO,CAAE,CACL,eAAgB,kBADX,CAHiD,CAAlD,CAAL,CAOFI,IAPE,CAOG,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACC,IAAL,EAAJ,EAPP,EAQFF,IARE,CAQG,SAAAZ,IAAI,CAAI,CACV,GAAIA,IAAI,CAACe,KAAT,CAAe,CACXC,KAAK,CAAChB,IAAI,CAACe,KAAN,CAAL,CACH,CAFD,IAEO,CACHV,QAAQ,CAACN,cAAc,CAACC,IAAD,CAAf,CAAR,CACH,CACJ,CAdE,EAeFiB,KAfE,CAeIC,OAAO,CAACC,GAfZ,CAAP,CAgBH,CAjBD,CAkBH,CAnBM,CAqBP,MAAO,IAAME,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACxB,MAAO,UAAAhB,QAAQ,CAAI,CACfA,QAAQ,CAACH,gBAAgB,EAAjB,CAAR,CACA,MAAOI,CAAAA,KAAK,CAAC,qCAAD,CAAwC,CAChDF,WAAW,CAAE,SADmC,CAEhDG,MAAM,CAAE,QAFwC,CAAxC,CAAZ,CAIH,CAND,CAOH,CARM","sourcesContent":["//synchronous action creators\nexport const setCurrentUser = user => {\n    return {\n        type: \"SET_CURRENT_USER\",\n        user\n    }\n}\n\nexport const clearCurrentUser = () => {\n    return {\n        type: \"CLEAR_CURRENT_USER\"\n    }\n}\n\n\n//asynchronous action creators\nexport const login = credentials => {\n    return dispatch => {\n        return fetch(\"http://localhost:3000/api/v1/login\", {\n            credentials: \"include\",\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(credentials)\n        })\n            .then(resp => resp.json())\n            .then(user => {\n                if (user.error){\n                    alert(user.error)\n                } else {\n                    dispatch(setCurrentUser(user))\n                }\n            })\n            .catch(console.log)\n    }\n}\n\nexport const getCurrentUser = () => {\n    return dispatch => {\n        return fetch(\"http://localhost:3000/api/v1/get_current_user\", {\n            credentials: \"include\",\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n        })\n            .then(resp => resp.json())\n            .then(user => {\n                if (user.error){\n                    alert(user.error)\n                } else {\n                    dispatch(setCurrentUser(user))\n                }\n            })\n            .catch(console.log)\n    }\n}\n\nexport const logout = () => {\n    return dispatch => {\n        dispatch(clearCurrentUser())\n        return fetch('http://localhost:3000/api/v1/logout', {\n            credentials: \"include\", \n            method: \"DELETE\"\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}