{"ast":null,"code":"var _jsxFileName = \"/Users/skout/Desktop/Auditi/auditi_frontend/src/NavBar.js\";\nimport React, { PureComponent } from 'react';\nimport { Menu, Icon, Search, Grid } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport './App.css';\n\nclass NavBar extends PureComponent {\n  constructor(props) {\n    super();\n\n    this.handleWindowSizeChange = () => {\n      this.setState({\n        deviceWidth: window.innerWidth\n      });\n    };\n\n    this.state = {\n      deviceWidth: window.innerWidth\n    };\n  } //resizes based on device type\n\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  render() {\n    let isMobile;\n    const setWidth = this.state.deviceWidth;\n    setWidth <= 750 ? isMobile = true : isMobile = false;\n    let resizedIcon;\n    let navType;\n\n    if (isMobile) {\n      resizedIcon = \"small\";\n      navType = \"navMobile\";\n    } else {\n      resizedIcon = \"huge\";\n      navType = \"navDesktop\";\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"ui four column grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 3\n      }\n    })) // <Menu secondary fixed=\"top\" widths={3}>\n    //     <Menu.Item><Icon size={resizedIcon} name='home' color='orange' /></Menu.Item>\n    //     <Menu.Item><Search className=\"search-bar\" /></Menu.Item>\n    //     <Menu.Item><Icon size={resizedIcon} name='user' color='purple' /></Menu.Item>\n    // </Menu>\n    ;\n  }\n\n}\n\nexport default NavBar;","map":{"version":3,"sources":["/Users/skout/Desktop/Auditi/auditi_frontend/src/NavBar.js"],"names":["React","PureComponent","Menu","Icon","Search","Grid","Link","NavBar","constructor","props","handleWindowSizeChange","setState","deviceWidth","window","innerWidth","state","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","isMobile","setWidth","resizedIcon","navType"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,MAArB,EAA6BC,IAA7B,QAAwC,mBAAxC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,WAAP;;AAGA,MAAMC,MAAN,SAAqBN,aAArB,CAAmC;AACjCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB;;AADiB,SAgBnBC,sBAhBmB,GAgBM,MAAM;AAC7B,WAAKC,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAEC,MAAM,CAACC;AAAtB,OAAd;AACD,KAlBkB;;AAEjB,SAAKC,KAAL,GAAa;AACXH,MAAAA,WAAW,EAAEC,MAAM,CAACC;AADT,KAAb;AAGD,GANgC,CAQjC;;;AACAE,EAAAA,iBAAiB,GAAG;AAClBH,IAAAA,MAAM,CAACI,gBAAP,CAAwB,QAAxB,EAAkC,KAAKP,sBAAvC;AACD;;AAEDQ,EAAAA,oBAAoB,GAAG;AACrBL,IAAAA,MAAM,CAACM,mBAAP,CAA2B,QAA3B,EAAqC,KAAKT,sBAA1C;AACD;;AAMDU,EAAAA,MAAM,GAAE;AACN,QAAIC,QAAJ;AACA,UAAMC,QAAQ,GAAG,KAAKP,KAAL,CAAWH,WAA5B;AACAU,IAAAA,QAAQ,IAAI,GAAZ,GAAmBD,QAAQ,GAAG,IAA9B,GAAqCA,QAAQ,GAAG,KAAhD;AAGA,QAAIE,WAAJ;AACA,QAAIC,OAAJ;;AACA,QAAIH,QAAJ,EAAc;AACZE,MAAAA,WAAW,GAAG,OAAd;AACAC,MAAAA,OAAO,GAAG,WAAV;AACD,KAHD,MAGO;AACLD,MAAAA,WAAW,GAAG,MAAd;AACAC,MAAAA,OAAO,GAAG,YAAV;AACD;;AAGD,wBACI;AAAK,MAAA,KAAK,EAAC,qBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACN;AAAK,MAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAK,MAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAK,MAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADM,eAMN;AAAK,MAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANM,eAON;AAAK,MAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPM,eAQN;AAAK,MAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARM,eASN;AAAK,MAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATM,CADJ,CAaQ;AACA;AACA;AACA;AACA;AAjBR;AAoBD;;AA1DgC;;AA8DnC,eAAejB,MAAf","sourcesContent":["import React, { PureComponent } from 'react';\nimport { Menu, Icon, Search, Grid} from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport './App.css';\n\n\nclass NavBar extends PureComponent {\n  constructor(props) {\n    super()\n    this.state = {\n      deviceWidth: window.innerWidth\n    }\n  }\n\n  //resizes based on device type\n  componentDidMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  handleWindowSizeChange = () => {\n    this.setState({ deviceWidth: window.innerWidth });\n  }\n\n  render(){\n    let isMobile\n    const setWidth = this.state.deviceWidth\n    setWidth <= 750 ?  isMobile = true : isMobile = false\n\n\n    let resizedIcon\n    let navType\n    if (isMobile) {\n      resizedIcon = \"small\"\n      navType = \"navMobile\"\n    } else {\n      resizedIcon = \"huge\"\n      navType = \"navDesktop\"\n    }\n    \n\n    return (\n        <div class=\"ui four column grid\">\n  <div class=\"row\">\n    <div class=\"column\"></div>\n    <div class=\"column\"></div>\n    <div class=\"column\"></div>\n  </div>\n  <div class=\"column\"></div>\n  <div class=\"column\"></div>\n  <div class=\"column\"></div>\n  <div class=\"column\"></div>\n</div>\n\n            // <Menu secondary fixed=\"top\" widths={3}>\n            //     <Menu.Item><Icon size={resizedIcon} name='home' color='orange' /></Menu.Item>\n            //     <Menu.Item><Search className=\"search-bar\" /></Menu.Item>\n            //     <Menu.Item><Icon size={resizedIcon} name='user' color='purple' /></Menu.Item>\n            // </Menu>\n    )\n\n  }\n\n}\n\nexport default NavBar;"]},"metadata":{},"sourceType":"module"}