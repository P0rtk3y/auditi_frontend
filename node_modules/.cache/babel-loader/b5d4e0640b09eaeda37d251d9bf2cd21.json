{"ast":null,"code":"import * as React from 'react';\nimport { LogContext } from './KnobContexts';\n\nvar defaultFormatter = function defaultFormatter(name) {\n  return \"\".concat(new Date().toLocaleTimeString(), \": \").concat(name);\n};\n\nvar useLogKnob = function useLogKnob(name, callback) {\n  var formatter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultFormatter;\n\n  var _React$useContext = React.useContext(LogContext),\n      appendLog = _React$useContext.appendLog;\n\n  var proxy = React.useCallback(function () {\n    for (var _len = arguments.length, a = new Array(_len), _key = 0; _key < _len; _key++) {\n      a[_key] = arguments[_key];\n    }\n\n    appendLog(formatter.apply(void 0, [name].concat(a)));\n    return callback.apply(void 0, a);\n  }, [appendLog, callback, name, formatter]);\n  return proxy;\n};\n\nexport default useLogKnob;","map":{"version":3,"sources":["/Users/skout/Desktop/Auditi/auditi_frontend/node_modules/@stardust-ui/docs-components/dist/es/knobs/useLogKnob.js"],"names":["React","LogContext","defaultFormatter","name","concat","Date","toLocaleTimeString","useLogKnob","callback","formatter","arguments","length","undefined","_React$useContext","useContext","appendLog","proxy","useCallback","_len","a","Array","_key","apply"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,gBAA3B;;AAEA,IAAIC,gBAAgB,GAAG,SAASA,gBAAT,CAA0BC,IAA1B,EAAgC;AACrD,SAAO,GAAGC,MAAH,CAAU,IAAIC,IAAJ,GAAWC,kBAAX,EAAV,EAA2C,IAA3C,EAAiDF,MAAjD,CAAwDD,IAAxD,CAAP;AACD,CAFD;;AAIA,IAAII,UAAU,GAAG,SAASA,UAAT,CAAoBJ,IAApB,EAA0BK,QAA1B,EAAoC;AACnD,MAAIC,SAAS,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoER,gBAApF;;AAEA,MAAIW,iBAAiB,GAAGb,KAAK,CAACc,UAAN,CAAiBb,UAAjB,CAAxB;AAAA,MACIc,SAAS,GAAGF,iBAAiB,CAACE,SADlC;;AAGA,MAAIC,KAAK,GAAGhB,KAAK,CAACiB,WAAN,CAAkB,YAAY;AACxC,SAAK,IAAIC,IAAI,GAAGR,SAAS,CAACC,MAArB,EAA6BQ,CAAC,GAAG,IAAIC,KAAJ,CAAUF,IAAV,CAAjC,EAAkDG,IAAI,GAAG,CAA9D,EAAiEA,IAAI,GAAGH,IAAxE,EAA8EG,IAAI,EAAlF,EAAsF;AACpFF,MAAAA,CAAC,CAACE,IAAD,CAAD,GAAUX,SAAS,CAACW,IAAD,CAAnB;AACD;;AAEDN,IAAAA,SAAS,CAACN,SAAS,CAACa,KAAV,CAAgB,KAAK,CAArB,EAAwB,CAACnB,IAAD,EAAOC,MAAP,CAAce,CAAd,CAAxB,CAAD,CAAT;AACA,WAAOX,QAAQ,CAACc,KAAT,CAAe,KAAK,CAApB,EAAuBH,CAAvB,CAAP;AACD,GAPW,EAOT,CAACJ,SAAD,EAAYP,QAAZ,EAAsBL,IAAtB,EAA4BM,SAA5B,CAPS,CAAZ;AAQA,SAAOO,KAAP;AACD,CAfD;;AAiBA,eAAeT,UAAf","sourcesContent":["import * as React from 'react';\nimport { LogContext } from './KnobContexts';\n\nvar defaultFormatter = function defaultFormatter(name) {\n  return \"\".concat(new Date().toLocaleTimeString(), \": \").concat(name);\n};\n\nvar useLogKnob = function useLogKnob(name, callback) {\n  var formatter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultFormatter;\n\n  var _React$useContext = React.useContext(LogContext),\n      appendLog = _React$useContext.appendLog;\n\n  var proxy = React.useCallback(function () {\n    for (var _len = arguments.length, a = new Array(_len), _key = 0; _key < _len; _key++) {\n      a[_key] = arguments[_key];\n    }\n\n    appendLog(formatter.apply(void 0, [name].concat(a)));\n    return callback.apply(void 0, a);\n  }, [appendLog, callback, name, formatter]);\n  return proxy;\n};\n\nexport default useLogKnob;"]},"metadata":{},"sourceType":"module"}