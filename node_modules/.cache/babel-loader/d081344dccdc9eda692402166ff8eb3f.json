{"ast":null,"code":"var _jsxFileName = \"/Users/skout/Desktop/Auditi/auditi_frontend/src/components/Audiocard.js\";\nimport React from 'react';\nimport { Image, Card, Grid, Icon, Label } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport Tags from './Tags';\nimport OnEvent from 'react-onevent'; // import Pizzicato from 'pizzicato'\n\nimport { confirmDelete, deleteAudiocard, editAudiocard, confirmEdit } from '../actions/myAudioCards';\n\nconst Audiocard = ({\n  audiocard,\n  confirmDelete,\n  deleteAudiocard,\n  editAudiocard,\n  confirmEdit\n}) => {\n  let newDate = '';\n\n  if (audiocard.attributes.created_at) {\n    let convertDate = audiocard.attributes.created_at.split('T')[0].split('-');\n    newDate = new Date(convertDate).toDateString();\n  } //play on hover\n\n\n  const playRecording = () => {\n    console.log(\"PLAYING RECORDING\");\n\n    if (audiocard.attributes.soundfile) {//    audiocard.attributes.soundfile.play()\n    }\n  };\n\n  const tags = JSON.parse(audiocard.attributes.tags);\n  const getTags = tags.map((tag, index) => /*#__PURE__*/React.createElement(Tags, {\n    tag: tag,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }));\n\n  const handleDeleteClick = e => {\n    confirmDelete(audiocard.id);\n    deleteAudiocard(audiocard.id);\n  };\n\n  const addColor = category => {\n    switch (category) {\n      case \"quotes\":\n        return \"#AECBDF\";\n\n      case \"music\":\n        return \"#DFC2AE\";\n\n      case \"nature\":\n        return \"#AEDFC1\";\n\n      case \"Personal\":\n        return \"#DFB3AE\";\n\n      case \"joke\":\n        return \"#C99EDB\";\n\n      case \"health\":\n        return \"#DA9333\";\n\n      default:\n        return \"#AEDFD5\";\n    }\n  };\n\n  const modifyCardContent = id => {\n    let oldHeader = audiocard.attributes.soundster;\n    let modifyCard = document.querySelector(`div.header.header-${id}`);\n    modifyCard.setAttribute('contenteditable', 'true');\n    let newHeader = modifyCard.innerHTML;\n\n    if (oldHeader !== newHeader) {\n      audiocard.attributes.soundster = newHeader;\n      confirmEdit(audiocard);\n      editAudiocard(audiocard);\n    }\n  };\n\n  const addFavorite = e => {\n    return /*#__PURE__*/React.createElement(\"i\", {\n      className: \"red hear icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    color: \"olive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    fluid: true,\n    src: audiocard.attributes.image,\n    label: {\n      as: 'a',\n      className: `icon-${audiocard.id}`,\n      icon: 'heart onClick=e=>{addFavorite()}',\n      corner: 'left'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Card.Content, {\n    onMouseOver: playRecording(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    className: `header-${audiocard.id}`,\n    onClick: e => modifyCardContent(audiocard.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, audiocard.attributes.soundster), /*#__PURE__*/React.createElement(Card.Meta, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }\n  }, \"Created on \", newDate)), /*#__PURE__*/React.createElement(Card.Description, {\n    style: {\n      color: addColor(audiocard.attributes.category)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }, \"(\", audiocard.attributes.category, \")\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card.Content, {\n    extra: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Row, {\n    column: 2,\n    className: \"tag-button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 33\n    }\n  }, getTags)))), /*#__PURE__*/React.createElement(Icon, {\n    name: \"times circle\",\n    color: \"yellow\",\n    className: \"deleteIcon\",\n    onClick: handleDeleteClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }));\n};\n\nexport default connect(null, {\n  confirmDelete,\n  deleteAudiocard,\n  editAudiocard,\n  confirmEdit\n})(Audiocard);","map":{"version":3,"sources":["/Users/skout/Desktop/Auditi/auditi_frontend/src/components/Audiocard.js"],"names":["React","Image","Card","Grid","Icon","Label","connect","Tags","OnEvent","confirmDelete","deleteAudiocard","editAudiocard","confirmEdit","Audiocard","audiocard","newDate","attributes","created_at","convertDate","split","Date","toDateString","playRecording","console","log","soundfile","tags","JSON","parse","getTags","map","tag","index","handleDeleteClick","e","id","addColor","category","modifyCardContent","oldHeader","soundster","modifyCard","document","querySelector","setAttribute","newHeader","innerHTML","addFavorite","image","as","className","icon","corner","color"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Image, Card, Grid, Icon, Label } from 'semantic-ui-react';\nimport { connect } from 'react-redux'\nimport Tags from './Tags'\nimport OnEvent from 'react-onevent'\n// import Pizzicato from 'pizzicato'\nimport {confirmDelete, deleteAudiocard, editAudiocard, confirmEdit} from '../actions/myAudioCards'\n\nconst Audiocard = ({audiocard, confirmDelete, deleteAudiocard, editAudiocard, confirmEdit}) => {\n\n    let newDate = ''\n    if (audiocard.attributes.created_at){\n        let convertDate = audiocard.attributes.created_at.split('T')[0].split('-')\n        newDate = new Date(convertDate).toDateString()\n    }\n\n    //play on hover\n    const playRecording = () => {\n        console.log(\"PLAYING RECORDING\")\n        if(audiocard.attributes.soundfile){\n        //    audiocard.attributes.soundfile.play()\n        }\n    }\n\n    const tags = JSON.parse(audiocard.attributes.tags)\n\n    const getTags = tags.map((tag, index) => \n        <Tags tag={tag} key={index} />\n    )\n\n    const handleDeleteClick = e => {\n        confirmDelete(audiocard.id)\n        deleteAudiocard(audiocard.id)\n    }\n\n    const addColor = (category) => {\n        switch(category){\n            case \"quotes\":\n                return \"#AECBDF\"\n            case \"music\":\n                return \"#DFC2AE\"\n            case \"nature\":\n                return \"#AEDFC1\"\n            case \"Personal\":\n                return \"#DFB3AE\"\n            case \"joke\":\n                return \"#C99EDB\"\n            case \"health\":\n                return \"#DA9333\"\n            default:\n                return \"#AEDFD5\"\n        }\n    }\n\n    const modifyCardContent = (id) => {\n        let oldHeader = audiocard.attributes.soundster\n        let modifyCard = document.querySelector(`div.header.header-${id}`)\n            modifyCard.setAttribute('contenteditable', 'true')\n        let newHeader = modifyCard.innerHTML\n\n        if(oldHeader !== newHeader){\n            audiocard.attributes.soundster = newHeader\n            confirmEdit(audiocard)\n            editAudiocard(audiocard)\n        }\n    }\n\n    const addFavorite = e => {\n       return <i className='red hear icon'></i>\n    }\n\n\n        return (\n                <Card color=\"olive\">\n                    <Image \n                        fluid\n                        src={audiocard.attributes.image} \n                        label={{as: 'a', className:`icon-${audiocard.id}`, icon: 'heart onClick=e=>{addFavorite()}', corner: 'left'}}\n                    />\n                    <Card.Content\n                        onMouseOver={playRecording()}\n                    >\n                        <Card.Header className={`header-${audiocard.id}`} onClick={e => modifyCardContent(audiocard.id)}>{audiocard.attributes.soundster}</Card.Header>\n                        <Card.Meta>\n                            <span className='date'>Created on {newDate}</span>\n                        </Card.Meta>\n                        <Card.Description style={{color:addColor(audiocard.attributes.category)}}>\n                            ({audiocard.attributes.category})\n                        </Card.Description>\n                    </Card.Content>\n                    <div className='icon-container'>\n                        <Card.Content extra>\n                            <Grid>\n                                <Grid.Row column={2} className='tag-button-container'>\n                                    {getTags}\n                                </Grid.Row>\n                            </Grid>\n                        </Card.Content>\n                    </div>\n                    <Icon name=\"times circle\" color='yellow' className='deleteIcon' onClick={handleDeleteClick}/>\n                </Card>\n        )\n}\n\n\nexport default connect(null, {confirmDelete, deleteAudiocard, editAudiocard, confirmEdit})(Audiocard)"]},"metadata":{},"sourceType":"module"}