{"ast":null,"code":"var _jsxFileName = \"/Users/skout/Desktop/Auditi/auditi_frontend/src/components/MyAudiocards.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Audiocard from './Audiocard';\n\nconst MyAudiocards = ({\n  userAudiocards\n}) => {\n  const audiocards = userAudiocards.sort((a, b) => b.attributes.created_at - a.attributes.created_at).map(audio => /*#__PURE__*/React.createElement(Audiocard, {\n    audiocard: audio,\n    key: audio.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }\n  })).sort((a, b) => b.date - a.date);\n  return audiocards;\n};\n\nconst mapStateToProps = state => {\n  return {\n    userAudiocards: state.myAudioCards\n  };\n};\n\nexport default connect(mapStateToProps)(MyAudiocards);","map":{"version":3,"sources":["/Users/skout/Desktop/Auditi/auditi_frontend/src/components/MyAudiocards.js"],"names":["React","connect","Audiocard","MyAudiocards","userAudiocards","audiocards","sort","a","b","attributes","created_at","map","audio","id","date","mapStateToProps","state","myAudioCards"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAsB;AACvC,QAAMC,UAAU,GAAGD,cAAc,CAACE,IAAf,CAAoB,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACC,UAAF,CAAaC,UAAb,GAA0BH,CAAC,CAACE,UAAF,CAAaC,UAArE,EAAiFC,GAAjF,CAAqFC,KAAK,iBACrG,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEA,KAAtB;AAA6B,IAAA,GAAG,EAAEA,KAAK,CAACC,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADW,EAEjBP,IAFiB,CAEZ,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACM,IAAF,GAASP,CAAC,CAACO,IAFT,CAAnB;AAIA,SACIT,UADJ;AAGH,CARD;;AAUA,MAAMU,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHZ,IAAAA,cAAc,EAAEY,KAAK,CAACC;AADnB,GAAP;AAGH,CAJD;;AAMA,eAAehB,OAAO,CAACc,eAAD,CAAP,CAAyBZ,YAAzB,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport Audiocard from './Audiocard'\n\nconst MyAudiocards = ({userAudiocards}) => {\n    const audiocards = userAudiocards.sort((a, b) => b.attributes.created_at - a.attributes.created_at).map(audio => \n            <Audiocard audiocard={audio} key={audio.id} />\n    ).sort((a, b) => b.date - a.date)\n\n    return (\n        audiocards\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        userAudiocards: state.myAudioCards\n    }\n}\n\nexport default connect(mapStateToProps)(MyAudiocards)\n"]},"metadata":{},"sourceType":"module"}