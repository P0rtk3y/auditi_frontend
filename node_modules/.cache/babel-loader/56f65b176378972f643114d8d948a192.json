{"ast":null,"code":"import * as React from 'react';\nimport { KnobContext } from './KnobContexts';\n\nvar useKnob = function useKnob(options) {\n  var initialValue = options.initialValue,\n      name = options.name;\n  var knobContext = React.useContext(KnobContext);\n  var value = knobContext.knobs[name] === undefined ? initialValue : knobContext.knobs[name].value;\n\n  var setValue = function setValue(newValue) {\n    knobContext.setKnobValue(name, newValue);\n  };\n\n  React.useEffect(function () {\n    knobContext.registerKnob(Object.assign({}, options, {\n      value: initialValue\n    }));\n    return function () {\n      return knobContext.unregisterKnob(name);\n    };\n  }, [name]);\n  return [value, setValue];\n};\n\nexport default useKnob;","map":{"version":3,"sources":["/Users/skout/Desktop/Auditi/auditi_frontend/node_modules/@stardust-ui/docs-components/dist/es/knobs/useKnob.js"],"names":["React","KnobContext","useKnob","options","initialValue","name","knobContext","useContext","value","knobs","undefined","setValue","newValue","setKnobValue","useEffect","registerKnob","Object","assign","unregisterKnob"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,WAAT,QAA4B,gBAA5B;;AAEA,IAAIC,OAAO,GAAG,SAASA,OAAT,CAAiBC,OAAjB,EAA0B;AACtC,MAAIC,YAAY,GAAGD,OAAO,CAACC,YAA3B;AAAA,MACIC,IAAI,GAAGF,OAAO,CAACE,IADnB;AAEA,MAAIC,WAAW,GAAGN,KAAK,CAACO,UAAN,CAAiBN,WAAjB,CAAlB;AACA,MAAIO,KAAK,GAAGF,WAAW,CAACG,KAAZ,CAAkBJ,IAAlB,MAA4BK,SAA5B,GAAwCN,YAAxC,GAAuDE,WAAW,CAACG,KAAZ,CAAkBJ,IAAlB,EAAwBG,KAA3F;;AAEA,MAAIG,QAAQ,GAAG,SAASA,QAAT,CAAkBC,QAAlB,EAA4B;AACzCN,IAAAA,WAAW,CAACO,YAAZ,CAAyBR,IAAzB,EAA+BO,QAA/B;AACD,GAFD;;AAIAZ,EAAAA,KAAK,CAACc,SAAN,CAAgB,YAAY;AAC1BR,IAAAA,WAAW,CAACS,YAAZ,CAAyBC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBd,OAAlB,EAA2B;AAClDK,MAAAA,KAAK,EAAEJ;AAD2C,KAA3B,CAAzB;AAGA,WAAO,YAAY;AACjB,aAAOE,WAAW,CAACY,cAAZ,CAA2Bb,IAA3B,CAAP;AACD,KAFD;AAGD,GAPD,EAOG,CAACA,IAAD,CAPH;AAQA,SAAO,CAACG,KAAD,EAAQG,QAAR,CAAP;AACD,CAnBD;;AAqBA,eAAeT,OAAf","sourcesContent":["import * as React from 'react';\nimport { KnobContext } from './KnobContexts';\n\nvar useKnob = function useKnob(options) {\n  var initialValue = options.initialValue,\n      name = options.name;\n  var knobContext = React.useContext(KnobContext);\n  var value = knobContext.knobs[name] === undefined ? initialValue : knobContext.knobs[name].value;\n\n  var setValue = function setValue(newValue) {\n    knobContext.setKnobValue(name, newValue);\n  };\n\n  React.useEffect(function () {\n    knobContext.registerKnob(Object.assign({}, options, {\n      value: initialValue\n    }));\n    return function () {\n      return knobContext.unregisterKnob(name);\n    };\n  }, [name]);\n  return [value, setValue];\n};\n\nexport default useKnob;"]},"metadata":{},"sourceType":"module"}