{"ast":null,"code":"var _jsxFileName = \"/Users/skout/Desktop/Auditi/auditi_frontend/src/components/Signup.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Button } from 'semantic-ui-react';\nimport { updateSignupForm } from '../actions/signupForm.js';\nimport { signup } from '../actions/currentUser.js';\n\nconst Signup = ({\n  signupForm,\n  updateSignupForm,\n  signup\n}) => {\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    let signupFormData = { ...signupForm,\n      [name]: value\n    };\n    updateSignupForm(signupFormData);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    signup(signupForm);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"formInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Input, {\n    name: \"firstname\",\n    label: \"Firstname\",\n    placeholder: \"Firstname\",\n    value: signupForm.firstname,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form.Input, {\n    name: \"lastname\",\n    label: \"Lastname\",\n    placeholder: \"Lastname\",\n    value: signupForm.lastname,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Input, {\n    fluid: true,\n    name: \"email\",\n    label: \"Email\",\n    placeholder: \"Email\",\n    value: signupForm.email,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form.Input, {\n    fluid: true,\n    type: \"Password\",\n    name: \"password\",\n    label: \"Password\",\n    placeholder: \"Password\",\n    value: signupForm.password,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form.Checkbox, {\n    label: \"I agree to the Terms and Conditions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    floated: \"right\",\n    color: \"orange\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  })));\n}; //returns a props object from store with a key loginForm and values: {email: \"\", password: \"\"} that can be destructured\n\n\nconst mapStateToProps = state => {\n  return {\n    signupForm: state.signupForm\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateSignupForm,\n  signup\n})(Signup);","map":{"version":3,"sources":["/Users/skout/Desktop/Auditi/auditi_frontend/src/components/Signup.js"],"names":["React","connect","Form","Button","updateSignupForm","signup","Signup","signupForm","handleChange","e","name","value","target","signupFormData","handleSubmit","preventDefault","firstname","lastname","email","password","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { Form, Button } from 'semantic-ui-react'\nimport { updateSignupForm } from '../actions/signupForm.js'\nimport { signup } from '../actions/currentUser.js'\n\nconst Signup = ({signupForm, updateSignupForm, signup}) => {\n\n    const handleChange = e => {\n        const {name, value} = e.target \n        let signupFormData = {\n            ...signupForm,\n            [name]: value\n        }\n        updateSignupForm(signupFormData)\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        signup(signupForm)\n    }\n\n\n\n    return (\n        <div className=\"formInfo\">\n            <Form onSubmit={handleSubmit}>\n                <Form.Group widths='equal'>\n                    <Form.Input name='firstname' label=\"Firstname\" placeholder='Firstname' value={signupForm.firstname} onChange={handleChange} />\n                    <Form.Input name='lastname' label=\"Lastname\" placeholder='Lastname' value={signupForm.lastname} onChange={handleChange} />\n                </Form.Group>\n                    <Form.Input fluid name='email' label=\"Email\" placeholder='Email' value={signupForm.email} onChange={handleChange} />\n                    <Form.Input fluid type=\"Password\" name='password' label=\"Password\" placeholder='Password' value={signupForm.password} onChange={handleChange} />\n                <Form.Checkbox label='I agree to the Terms and Conditions' />\n                <Button type='submit' floated='right' color='orange'>Submit</Button>\n                <br></br>\n                <br></br>\n            </Form>\n        </div>\n    )\n}\n\n//returns a props object from store with a key loginForm and values: {email: \"\", password: \"\"} that can be destructured\nconst mapStateToProps = state => {\n    return {\n        signupForm: state.signupForm\n    }\n}\n\nexport default connect(mapStateToProps, {updateSignupForm, signup})(Signup)"]},"metadata":{},"sourceType":"module"}