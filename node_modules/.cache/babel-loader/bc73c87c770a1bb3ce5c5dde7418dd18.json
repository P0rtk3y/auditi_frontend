{"ast":null,"code":"import _classCallCheck from\"/Users/skout/Desktop/Auditi/auditi_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/skout/Desktop/Auditi/auditi_frontend/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/skout/Desktop/Auditi/auditi_frontend/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/skout/Desktop/Auditi/auditi_frontend/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{PureComponent}from'react';import{Menu,Icon,Search,Button,Modal}from'semantic-ui-react';import{Link}from'react-router-dom';import Login from'./components/Login';import'./App.css';import'./images/userIcon.png';var NavBar=/*#__PURE__*/function(_PureComponent){_inherits(NavBar,_PureComponent);var _super=_createSuper(NavBar);function NavBar(props){var _this;_classCallCheck(this,NavBar);_this=_super.call(this);_this.handleWindowSizeChange=function(){_this.setState({deviceWidth:window.innerWidth});};_this.state={deviceWidth:window.innerWidth};return _this;}//resizes based on device type\n_createClass(NavBar,[{key:\"componentDidMount\",value:function componentDidMount(){window.addEventListener('resize',this.handleWindowSizeChange);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){window.removeEventListener('resize',this.handleWindowSizeChange);}},{key:\"render\",//modal button open/close\nvalue:function render(){//resizing\nvar isMobile;var setWidth=this.state.deviceWidth;setWidth<=750?isMobile=true:isMobile=false;var resizedIcon;var navType;if(isMobile){resizedIcon=\"small\";navType=\"navMobile\";}else{resizedIcon=\"huge\";navType=\"navDesktop\";}return/*#__PURE__*/React.createElement(\"div\",{className:navType},/*#__PURE__*/React.createElement(Menu,{secondary:true,fixed:\"top\",widths:4},/*#__PURE__*/React.createElement(Menu.Item,null,/*#__PURE__*/React.createElement(Icon,{size:resizedIcon,name:\"home\",color:\"orange\"})),/*#__PURE__*/React.createElement(Menu.Item,null,/*#__PURE__*/React.createElement(Search,{category:true})),/*#__PURE__*/React.createElement(Menu.Item,null,/*#__PURE__*/React.createElement(Link,{to:\"/recorder\"},/*#__PURE__*/React.createElement(Icon,{size:resizedIcon,name:\"microphone\",color:\"olive\"}))),/*#__PURE__*/React.createElement(Menu.Item,null,/*#__PURE__*/React.createElement(Button.Group,null,/*#__PURE__*/React.createElement(Modal,{onClose:this.close,size:\"small\",dimmer:\"blurring\",trigger:/*#__PURE__*/React.createElement(Button,{color:\"teal\"},/*#__PURE__*/React.createElement(Link,{to:\"/login\"},\"Login\")),closeIcon:true},/*#__PURE__*/React.createElement(Modal.Content,null,/*#__PURE__*/React.createElement(Login,null))),/*#__PURE__*/React.createElement(Button.Or,null),/*#__PURE__*/React.createElement(Modal,{size:\"small\",dimmer:\"blurring\",trigger:/*#__PURE__*/React.createElement(Button,{positive:true},\"Signup\"),closeIcon:true})))));}}]);return NavBar;}(PureComponent);export default NavBar;","map":{"version":3,"sources":["/Users/skout/Desktop/Auditi/auditi_frontend/src/NavBar.js"],"names":["React","PureComponent","Menu","Icon","Search","Button","Modal","Link","Login","NavBar","props","handleWindowSizeChange","setState","deviceWidth","window","innerWidth","state","addEventListener","removeEventListener","isMobile","setWidth","resizedIcon","navType","close"],"mappings":"weAAA,MAAOA,CAAAA,KAAP,EAAgBC,aAAhB,KAAqC,OAArC,CACA,OAASC,IAAT,CAAeC,IAAf,CAAqBC,MAArB,CAA6BC,MAA7B,CAAqCC,KAArC,KAAkD,mBAAlD,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,MAAOC,CAAAA,KAAP,KAAkB,oBAAlB,CACA,MAAO,WAAP,CACA,MAAO,uBAAP,C,GAGMC,CAAAA,M,wGACJ,gBAAYC,KAAZ,CAAmB,wCACjB,wBADiB,MAgBnBC,sBAhBmB,CAgBM,UAAM,CAC7B,MAAKC,QAAL,CAAc,CAAEC,WAAW,CAAEC,MAAM,CAACC,UAAtB,CAAd,EACD,CAlBkB,CAEjB,MAAKC,KAAL,CAAa,CACXH,WAAW,CAAEC,MAAM,CAACC,UADT,CAAb,CAFiB,aAKlB,CAED;gFACoB,CAClBD,MAAM,CAACG,gBAAP,CAAwB,QAAxB,CAAkC,KAAKN,sBAAvC,EACD,C,mEAEsB,CACrBG,MAAM,CAACI,mBAAP,CAA2B,QAA3B,CAAqC,KAAKP,sBAA1C,EACD,C,gBAMD;uBAEQ,CACN;AACA,GAAIQ,CAAAA,QAAJ,CACA,GAAMC,CAAAA,QAAQ,CAAG,KAAKJ,KAAL,CAAWH,WAA5B,CACAO,QAAQ,EAAI,GAAZ,CAAmBD,QAAQ,CAAG,IAA9B,CAAqCA,QAAQ,CAAG,KAAhD,CAGA,GAAIE,CAAAA,WAAJ,CACA,GAAIC,CAAAA,OAAJ,CACA,GAAIH,QAAJ,CAAc,CACZE,WAAW,CAAG,OAAd,CACAC,OAAO,CAAG,WAAV,CACD,CAHD,IAGO,CACLD,WAAW,CAAG,MAAd,CACAC,OAAO,CAAG,YAAV,CACD,CAED,mBACI,2BAAK,SAAS,CAAEA,OAAhB,eACI,oBAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,KAAK,CAAC,KAAtB,CAA4B,MAAM,CAAE,CAApC,eACI,oBAAC,IAAD,CAAM,IAAN,mBAAW,oBAAC,IAAD,EAAM,IAAI,CAAED,WAAZ,CAAyB,IAAI,CAAC,MAA9B,CAAqC,KAAK,CAAC,QAA3C,EAAX,CADJ,cAEI,oBAAC,IAAD,CAAM,IAAN,mBACI,oBAAC,MAAD,EAAQ,QAAQ,KAAhB,EADJ,CAFJ,cAKI,oBAAC,IAAD,CAAM,IAAN,mBACI,oBAAC,IAAD,EAAM,EAAE,CAAC,WAAT,eAAsB,oBAAC,IAAD,EAAM,IAAI,CAAEA,WAAZ,CAAyB,IAAI,CAAC,YAA9B,CAA2C,KAAK,CAAC,OAAjD,EAAtB,CADJ,CALJ,cAQI,oBAAC,IAAD,CAAM,IAAN,mBACI,oBAAC,MAAD,CAAQ,KAAR,mBACI,oBAAC,KAAD,EAAO,OAAO,CAAE,KAAKE,KAArB,CACI,IAAI,CAAC,OADT,CAEI,MAAM,CAAC,UAFX,CAGI,OAAO,cACH,oBAAC,MAAD,EAAQ,KAAK,CAAC,MAAd,eACI,oBAAC,IAAD,EAAM,EAAE,CAAC,QAAT,UADJ,CAJR,CAOI,SAAS,KAPb,eAQI,oBAAC,KAAD,CAAO,OAAP,mBACI,oBAAC,KAAD,MADJ,CARJ,CADJ,cAaI,oBAAC,MAAD,CAAQ,EAAR,MAbJ,cAcI,oBAAC,KAAD,EACI,IAAI,CAAC,OADT,CAEI,MAAM,CAAC,UAFX,CAGI,OAAO,cAAE,oBAAC,MAAD,EAAQ,QAAQ,KAAhB,WAHb,CAII,SAAS,KAJb,EAdJ,CADJ,CARJ,CADJ,CADJ,CAsCD,C,oBA9EkBtB,a,EAkFrB,cAAeQ,CAAAA,MAAf","sourcesContent":["import React, { PureComponent } from 'react';\nimport { Menu, Icon, Search, Button, Modal } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport Login from './components/Login'\nimport './App.css';\nimport './images/userIcon.png';\n\n\nclass NavBar extends PureComponent {\n  constructor(props) {\n    super()\n    this.state = {\n      deviceWidth: window.innerWidth,\n    }\n  }\n\n  //resizes based on device type\n  componentDidMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  handleWindowSizeChange = () => {\n    this.setState({ deviceWidth: window.innerWidth });\n  }\n\n  //modal button open/close\n\n  render(){\n    //resizing\n    let isMobile\n    const setWidth = this.state.deviceWidth\n    setWidth <= 750 ?  isMobile = true : isMobile = false\n\n\n    let resizedIcon\n    let navType\n    if (isMobile) {\n      resizedIcon = \"small\"\n      navType = \"navMobile\"\n    } else {\n      resizedIcon = \"huge\"\n      navType = \"navDesktop\"\n    }\n\n    return (\n        <div className={navType}>\n            <Menu secondary fixed=\"top\" widths={4}>\n                <Menu.Item><Icon size={resizedIcon} name='home' color='orange' /></Menu.Item>\n                <Menu.Item>\n                    <Search category />\n                </Menu.Item>\n                <Menu.Item>\n                    <Link to='/recorder' ><Icon size={resizedIcon} name='microphone' color='olive' /></Link>\n                </Menu.Item>\n                <Menu.Item>\n                    <Button.Group>\n                        <Modal onClose={this.close}\n                            size='small' \n                            dimmer='blurring' \n                            trigger={\n                                <Button color='teal'>\n                                    <Link to='/login'>Login</Link>\n                                </Button>} \n                            closeIcon>\n                            <Modal.Content> \n                                <Login /> \n                            </Modal.Content>\n                        </Modal>   \n                        <Button.Or />\n                        <Modal \n                            size='small' \n                            dimmer='blurring' \n                            trigger={<Button positive>Signup</Button>} \n                            closeIcon\n                        />\n                    </Button.Group>\n                </Menu.Item>\n            </Menu>\n        </div>\n\n    )\n\n  }\n\n}\n\nexport default NavBar;"]},"metadata":{},"sourceType":"module"}